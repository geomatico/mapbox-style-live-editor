{"version":3,"sources":["webpack://plantilla-visor-react/./node_modules/codemirror/addon/mode/overlay.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/gfm/gfm.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/markdown/markdown.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","mod","urlRE","defineMode","config","modeConfig","codeDepth","gfmOverlay","code","codeBlock","ateSpace","s","match","skipToEnd","sol","peek","next","before","eatWhile","difference","eatSpace","gitHubSpice","string","slice","test","charAt","markdownConfig","taskLists","strikethrough","emoji","attr","name","getMode","defineMIME","cmCfg","modeCfg","htmlMode","htmlModeMissing","undefined","highlightFormatting","maxBlockquoteDepth","fencedCodeBlockHighlighting","fencedCodeBlockDefaultMode","xml","tokenTypeOverrides","tokenTypes","header","quote","list1","list2","list3","hr","image","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","em","strong","tokenType","hasOwnProperty","hrRE","listRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","switchInline","f","inline","switchBlock","block","linkTitle","indentedCode","htmlBlock","exit","inner","htmlState","tagStart","context","tokenize","isInText","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","firstTokenOnLine","column","indentation","prevLineLineIsEmpty","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","list","maxNonCodeIndentation","listStack","length","lineIndentation","indentationDiff","pop","allowsInlineContinuation","fencedCodeEnd","isHr","getType","eat","setext","listType","current","push","taskList","fencedEndRE","RegExp","localMode","findModeByName","found","mime","mimes","localState","local","lookAhead","footnoteLink","style","md_inside","indexOf","returnType","currListInd","hasExitedList","maxFencedEndInd","styles","i","taskOpen","join","taskClosed","listMod","handleText","text","ch","matchCh","regex","replace","previousFormatting","count","t","type","formattingEscape","end","atts","substring","backUp","len","after","leftFlanking","rightFlanking","setEm","setStrong","retType","endChar","returnState","linkRE","footnoteLinkInside","footnoteUrl","Pass","blockCommentStart","blockCommentEnd","closeBrackets","fold","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","indentUnit","defaults","prop","inText","chain","parser","inBlock","doctype","inTag","closure","baseState","tagName","eol","isInAttribute","stringStartCol","terminator","depth","Context","startOfLine","this","prev","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes"],"mappings":"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","file":"2425.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../markdown/markdown\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.fencedCodeBlockDefaultMode === undefined)\n    modeCfg.fencedCodeBlockDefaultMode = 'text/plain';\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ {0,3}(?:\\={1,}|-{2,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w\\/+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      var exit = htmlModeMissing\n      if (!exit) {\n        var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n        exit = inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n          (!inner.state.context && inner.state.tokenize.isInText)\n      }\n      if (exit) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n      // Reset inline styles which shouldn't propagate across list items\n      state.em = false;\n      state.strong = false;\n      state.code = false;\n      state.strikethrough = false;\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2] || modeCfg.fencedCodeBlockDefaultMode );\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      if (state.linkText && stream.match(/^.*?\\]/)) return getType(state)\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match('~~', true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^(?:[a-z_\\d+][a-z_\\d+-]*|\\-[a-z_\\d+][a-z_\\d+-]*):/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(']:', true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\.)+\"|'(?:[^'\\\\]|\\\\.)+'|\\((?:[^)\\\\]|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"sourceRoot":""}