{"version":3,"sources":["webpack://plantilla-visor-react/./node_modules/codemirror/mode/htmlmixed/htmlmixed.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/php/php.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","keywords","str","obj","words","split","matchSequence","list","end","escapes","phpString","patterns","tokenize","slice","closing","escaped","tokStack","pop","next","phpString_","phpKeywords","phpAtoms","phpBuiltin","registerHelper","join","phpConfig","helperType","blockKeywords","defKeywords","atoms","builtin","multiLineStrings","hooks","eatWhile","before","quoted","eat","delim","push","_stream","phpMode","php","startOpen","curMode","curState","pending","htmlNew","phpNew","isPHP","sol","context","prev","pos","m","openPHP","blockCommentStart","blockCommentEnd","lineComment","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","editorConf","config_","type","setStyle","indentUnit","defaults","prop","inText","chain","parser","ch","inBlock","doctype","quote","closure","baseState","tagStart","isInAttribute","stringStartCol","column","terminator","depth","Context","startOfLine","this","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","electricInput","configuration","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","reverse","mimeModes"],"mappings":"4HAUG,SAASA,GACV,aAEA,IAAIC,EAAc,CAChBC,OAAQ,CACN,CAAC,OAAQ,sBAAuB,cAChC,CAAC,OAAQ,kEAAmE,cAC5E,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,eAEfC,MAAQ,CACN,CAAC,OAAQ,SAAU,OACnB,CAAC,OAAQ,oCAAqC,OAC9C,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,SAejB,IAAIC,EAAkB,GAOtB,SAASC,EAAaC,EAAMC,GAC1B,IAAIC,EAAQF,EAAKE,MAPnB,SAAuBD,GAErB,OADaH,EAAgBG,KAEtBH,EAAgBG,GAAQ,IAAIE,OAAO,OAASF,EAAO,yCAInCG,CAAcH,IACrC,OAAOC,EAAQ,gBAAgBG,KAAKH,EAAM,IAAI,GAAK,GAGrD,SAASI,EAAaC,EAASC,GAC7B,OAAO,IAAIL,QAAQK,EAAW,IAAM,IAAM,OAAWD,EAAU,MAAQ,KAGzE,SAASE,EAAQC,EAAMC,GACrB,IAAK,IAAIC,KAAOF,EAGd,IAFA,IAAIG,EAAOF,EAAGC,KAASD,EAAGC,GAAO,IAC7BE,EAASJ,EAAKE,GACTG,EAAID,EAAOE,OAAS,EAAGD,GAAK,EAAGA,IACtCF,EAAKI,QAAQH,EAAOC,IAW1BrB,EAAWwB,WAAW,aAAa,SAAUC,EAAQC,GACnD,IAAIC,EAAW3B,EAAW4B,QAAQH,EAAQ,CACxCI,KAAM,MACNF,UAAU,EACVG,yBAA0BJ,EAAaI,yBACvCC,0BAA2BL,EAAaK,0BACxCC,oBAAqBN,EAAaM,sBAGhCC,EAAO,GACPC,EAAaR,GAAgBA,EAAaO,KAAME,EAAeT,GAAgBA,EAAaU,YAGhG,GAFArB,EAAQd,EAAagC,GACjBC,GAAYnB,EAAQmB,EAAYD,GAChCE,EAAc,IAAK,IAAId,EAAIc,EAAab,OAAS,EAAGD,GAAK,EAAGA,IAC9DY,EAAK/B,OAAOqB,QAAQ,CAAC,OAAQY,EAAad,GAAGgB,QAASF,EAAad,GAAGiB,OAExE,SAASC,EAAKC,EAAQC,GACpB,IAAkF5B,EAA9EV,EAAQwB,EAASe,MAAMF,EAAQC,EAAME,WAAYzB,EAAM,UAAU0B,KAAKzC,GAC1E,GAAIe,IAAQ,WAAW0B,KAAKJ,EAAOK,aAC9BhC,EAAU4B,EAAME,UAAU9B,SAAW4B,EAAME,UAAU9B,QAAQiC,gBAC9Db,EAAKc,eAAelC,GACtB4B,EAAMO,MAAQnC,EAAU,SACnB,GAAI4B,EAAMO,OAAS9B,GAAO,KAAK0B,KAAKJ,EAAOK,WAAY,CAC5D,IAAIG,EAAQ,gBAAgBrC,KAAK8B,EAAMO,OACvCP,EAAMO,MAAQ,KACd,IAAIC,EAA+B,KAApBT,EAAOK,WAhC5B,SAA0BK,EAASC,GACjC,IAAK,IAAI9B,EAAI,EAAGA,EAAI6B,EAAQ5B,OAAQD,IAAK,CACvC,IAAI+B,EAAOF,EAAQ7B,GACnB,IAAK+B,EAAK,IAAMA,EAAK,GAAGR,KAAKvC,EAAa8C,EAASC,EAAK,KAAM,OAAOA,EAAK,IA6B9BC,CAAiBpB,EAAKe,EAAM,IAAKA,EAAM,IAC7EV,EAAOtC,EAAW4B,QAAQH,EAAQwB,GAClCK,EAAU1C,EAAaoC,EAAM,IAAI,GAAOO,EAAS3C,EAAaoC,EAAM,IAAI,GAC5EP,EAAMC,MAAQ,SAAUF,EAAQC,GAC9B,OAAID,EAAOhC,MAAM8C,GAAS,IACxBb,EAAMC,MAAQH,EACdE,EAAMe,WAAaf,EAAMgB,UAAY,KAC9B,MA3EjB,SAAqBjB,EAAQkB,EAAKvD,GAChC,IAAIwD,EAAMnB,EAAOK,UAAWe,EAAQD,EAAIE,OAAOH,GAO/C,OANIE,GAAS,EACXpB,EAAOsB,OAAOH,EAAIrC,OAASsC,GAClBD,EAAInD,MAAM,WACnBgC,EAAOsB,OAAOH,EAAIrC,QACbkB,EAAOhC,MAAMkD,GAAK,IAAQlB,EAAOhC,MAAMmD,IAEvCxD,EAqEM4D,CAAYvB,EAAQe,EAAQd,EAAMgB,UAAUf,MAAMF,EAAQC,EAAMe,cAEzEf,EAAMgB,UAAYnB,EAClBG,EAAMe,WAAaxD,EAAWgE,WAAW1B,EAAMX,EAASsC,OAAOxB,EAAME,UAAW,GAAI,UAC3EF,EAAMO,QACfP,EAAMO,OAASR,EAAOK,UAClBL,EAAO0B,QAAOzB,EAAMO,OAAS,MAEnC,OAAO7C,EAGT,MAAO,CACL6D,WAAY,WAEV,MAAO,CAACtB,MAAOH,EAAMS,MAAO,KAAMS,UAAW,KAAMD,WAAY,KAAMb,UADzD3C,EAAWgE,WAAWrC,KAIpCwC,UAAW,SAAU1B,GACnB,IAAI2B,EAIJ,OAHI3B,EAAMe,aACRY,EAAQpE,EAAWmE,UAAU1B,EAAMgB,UAAWhB,EAAMe,aAE/C,CAACd,MAAOD,EAAMC,MAAOM,MAAOP,EAAMO,MACjCS,UAAWhB,EAAMgB,UAAWD,WAAYY,EACxCzB,UAAW3C,EAAWmE,UAAUxC,EAAUc,EAAME,aAG1DD,MAAO,SAAUF,EAAQC,GACvB,OAAOA,EAAMC,MAAMF,EAAQC,IAG7BwB,OAAQ,SAAUxB,EAAO4B,EAAWC,GAClC,OAAK7B,EAAMgB,WAAa,UAAUb,KAAKyB,GAC9B1C,EAASsC,OAAOxB,EAAME,UAAW0B,EAAWC,GAC5C7B,EAAMgB,UAAUQ,OAChBxB,EAAMgB,UAAUQ,OAAOxB,EAAMe,WAAYa,EAAWC,GAEpDtE,EAAWuE,MAGtBC,UAAW,SAAU/B,GACnB,MAAO,CAACA,MAAOA,EAAMe,YAAcf,EAAME,UAAWL,KAAMG,EAAMgB,WAAa9B,OAGhF,MAAO,aAAc,OAExB3B,EAAWyE,WAAW,YAAa,aAlJjCC,CAAI,EAAQ,MAAyB,EAAQ,MAAe,EAAQ,MAA6B,EAAQ,Q,gBCK1G,SAAS1E,GACV,aAEA,SAAS2E,EAASC,GAEhB,IADA,IAAIC,EAAM,GAAIC,EAAQF,EAAIG,MAAM,KACvB1D,EAAI,EAAGA,EAAIyD,EAAMxD,SAAUD,EAAGwD,EAAIC,EAAMzD,KAAM,EACvD,OAAOwD,EAIT,SAASG,EAAcC,EAAMC,EAAKC,GAChC,OAAmB,GAAfF,EAAK3D,OAAoB8D,EAAUF,GAChC,SAAU1C,EAAQC,GAEvB,IADA,IAAI4C,EAAWJ,EAAK,GACX5D,EAAI,EAAGA,EAAIgE,EAAS/D,OAAQD,IAAK,GAAImB,EAAOhC,MAAM6E,EAAShE,GAAG,IAErE,OADAoB,EAAM6C,SAAWN,EAAcC,EAAKM,MAAM,GAAIL,GACvCG,EAAShE,GAAG,GAGrB,OADAoB,EAAM6C,SAAWF,EAAUF,EAAKC,GACzB,UAGX,SAASC,EAAUI,EAASL,GAC1B,OAAO,SAAS3C,EAAQC,GAAS,OAEnC,SAAoBD,EAAQC,EAAO+C,EAASL,GAE1C,IAAgB,IAAZA,GAAqB3C,EAAOhC,MAAM,MAAM,IAAUgC,EAAOhC,MAAM,MAAM,GAEvE,OADAiC,EAAM6C,SAAW,KACV,SAIT,IAAgB,IAAZH,GAAqB3C,EAAOhC,MAAM,6BAmBpC,OAjBIgC,EAAOhC,MAAM,KAAK,KAEpBiC,EAAM6C,SAAWN,EAAc,CAC7B,CAAC,CAAC,IAAK,OACP,CAAC,CAAC,YAAa,UACd,CAAC,2BAA4B,cAC7B,CAAC,UAAW,aACb,CAAC,CAAC,IAAK,QACNQ,EAASL,IAEV3C,EAAOhC,MAAM,SAAS,KAExBiC,EAAM6C,SAAWN,EAAc,CAC7B,CAAC,CAAC,KAAM,OACR,CAAC,CAAC,QAAS,cACVQ,EAASL,IAEP,aAKT,IAFA,IAAIM,GAAU,GAENjD,EAAO0B,QACPuB,IAAuB,IAAZN,IACT3C,EAAOhC,MAAM,MAAM,KACnBgC,EAAOhC,MAAM,oCAAoC,KAAU,CACnE,IAAKiF,GAAWjD,EAAOhC,MAAMgF,GAAU,CACrC/C,EAAM6C,SAAW,KACjB7C,EAAMiD,SAASC,MAAOlD,EAAMiD,SAASC,MACrC,MAEFF,EAA2B,MAAjBjD,EAAOoD,SAAmBH,EAEtC,MAAO,SA7CiCI,CAAWrD,EAAQC,EAAO+C,EAASL,IAgD7E,IAAIW,EAAc,ieAMdC,EAAW,sHACXC,EAAa,ukSACjBhG,EAAWiG,eAAe,YAAa,MAAO,CAACH,EAAaC,EAAUC,GAAYE,KAAK,KAAKnB,MAAM,MAClG/E,EAAWiG,eAAe,YAAa,MAAO,SAE9C,IAAIE,EAAY,CACdtE,KAAM,QACNuE,WAAY,MACZzB,SAAUA,EAASmB,GACnBO,cAAe1B,EAAS,gEACxB2B,YAAa3B,EAAS,4CACtB4B,MAAO5B,EAASoB,GAChBS,QAAS7B,EAASqB,GAClBS,kBAAkB,EAClBC,MAAO,CACL,EAAK,SAASlE,GAEZ,OADAA,EAAOmE,SAAS,WACT,cAET,IAAK,SAASnE,EAAQC,GACpB,IAAImE,EACJ,GAAIA,EAASpE,EAAOhC,MAAM,UAAW,CACnC,IAAIqG,EAASrE,EAAOsE,IAAI,QACxBtE,EAAOmE,SAAS,UAChB,IAAII,EAAQvE,EAAOK,UAAU0C,MAAMqB,EAAO,GAAGtF,QAAUuF,EAAS,EAAI,IAEpE,GADIA,GAAQrE,EAAOsE,IAAID,GACnBE,EAGF,OAFCtE,EAAMiD,WAAajD,EAAMiD,SAAW,KAAKsB,KAAKD,EAAO,GACtDtE,EAAM6C,SAAWF,EAAU2B,EAAiB,KAAVF,GAC3B,SAGX,OAAO,GAET,IAAK,SAASrE,GACZ,MAAQA,EAAO0B,QAAU1B,EAAOhC,MAAM,MAAM,IAAQgC,EAAOoD,OAC3D,MAAO,WAET,IAAK,SAASpD,GACZ,GAAIA,EAAOsE,IAAI,KAAM,CACnB,MAAQtE,EAAO0B,QAAU1B,EAAOhC,MAAM,MAAM,IAAQgC,EAAOoD,OAC3D,MAAO,UAET,OAAO,GAET,IAAK,SAASqB,EAASxE,GAGrB,OAFCA,EAAMiD,WAAajD,EAAMiD,SAAW,KAAKsB,KAAK,IAAK,GACpDvE,EAAM6C,SAAWF,EAAU,KACpB,UAET,IAAK,SAAS6B,EAASxE,GAGrB,OAFIA,EAAMiD,UAAYjD,EAAMiD,SAASpE,QACnCmB,EAAMiD,SAASjD,EAAMiD,SAASpE,OAAS,MAClC,GAET,IAAK,SAAS2F,EAASxE,GAKrB,OAJIA,EAAMiD,UAAYjD,EAAMiD,SAASpE,OAAS,MACvCmB,EAAMiD,SAASjD,EAAMiD,SAASpE,OAAS,KAC5CmB,EAAM6C,SAAWF,EAAU3C,EAAMiD,SAASjD,EAAMiD,SAASpE,OAAS,MAE7D,KAKbtB,EAAWwB,WAAW,OAAO,SAASC,EAAQC,GAC5C,IAAIC,EAAW3B,EAAW4B,QAAQH,EAASC,GAAgBA,EAAaC,UAAa,aACjFuF,EAAUlH,EAAW4B,QAAQH,EAAQ0E,GAuCzC,MAAO,CACLnC,WAAY,WACV,IAAIzB,EAAOvC,EAAWgE,WAAWrC,GAC7BwF,EAAMzF,EAAa0F,UAAYpH,EAAWgE,WAAWkD,GAAW,KACpE,MAAO,CAAC3E,KAAMA,EACN4E,IAAKA,EACLE,QAAS3F,EAAa0F,UAAYF,EAAUvF,EAC5C2F,SAAU5F,EAAa0F,UAAYD,EAAM5E,EACzCgF,QAAS,OAGnBpD,UAAW,SAAS1B,GAClB,IACyEkB,EADrEpB,EAAOE,EAAMF,KAAMiF,EAAUxH,EAAWmE,UAAUxC,EAAUY,GAC5D4E,EAAM1E,EAAM0E,IAAKM,EAASN,GAAOnH,EAAWmE,UAAU+C,EAASC,GAGnE,OAF+BxD,EAA3BlB,EAAM4E,SAAW1F,EAAgB6F,EAC1BC,EACJ,CAAClF,KAAMiF,EAASL,IAAKM,EAAQJ,QAAS5E,EAAM4E,QAASC,SAAU3D,EAC9D4D,QAAS9E,EAAM8E,UAGzB7E,MAzDF,SAAkBF,EAAQC,GACxB,IAAIiF,EAAQjF,EAAM4E,SAAWH,EAE7B,GADI1E,EAAOmF,OAASlF,EAAM8E,SAA4B,KAAjB9E,EAAM8E,SAAmC,KAAjB9E,EAAM8E,UAAgB9E,EAAM8E,QAAU,MAC9FG,EAwBE,OAAIA,GAA+B,MAAtBjF,EAAM0E,IAAI7B,UAAoB9C,EAAOhC,MAAM,OAC7DiC,EAAM4E,QAAU1F,EAChBc,EAAM6E,SAAW7E,EAAMF,KAClBE,EAAM0E,IAAIS,QAAQC,OAAMpF,EAAM0E,IAAM,MAClC,QAEAD,EAAQxE,MAAMF,EAAQC,EAAM6E,UA7BnC,GAAI9E,EAAOhC,MAAM,WAIf,OAHAiC,EAAM4E,QAAUH,EACXzE,EAAM0E,MAAK1E,EAAM0E,IAAMnH,EAAWgE,WAAWkD,EAASvF,EAASsC,OAAOxB,EAAMF,KAAM,GAAI,MAC3FE,EAAM6E,SAAW7E,EAAM0E,IAChB,OAET,GAAqB,KAAjB1E,EAAM8E,SAAmC,KAAjB9E,EAAM8E,QAAgB,CAChD,MAAQ/E,EAAO0B,OAAS1B,EAAOoD,QAAUnD,EAAM8E,UAC/C,IAAIpH,EAAQ,cACHsC,EAAM8E,SAAW/E,EAAOsF,IAAMrF,EAAM8E,QAAQrC,KACrD1C,EAAOsF,IAAMrF,EAAM8E,QAAQrC,IACvB/E,EAAQsC,EAAM8E,QAAQpH,OAEtBA,EAAQwB,EAASe,MAAMF,EAAQC,EAAM6E,UAEvC7E,EAAM8E,UAAS9E,EAAM8E,QAAU,MACnC,IAAyDQ,EAArDpE,EAAMnB,EAAOK,UAAWmF,EAAUrE,EAAIE,OAAO,OAMjD,OALgB,GAAZmE,IACW,UAAT7H,IAAsB4H,EAAIpE,EAAInD,MAAM,cAAgB,MAAMoC,KAAKe,GAAMlB,EAAM8E,QAAUQ,EAAE,GACtFtF,EAAM8E,QAAU,CAACrC,IAAK1C,EAAOsF,IAAK3H,MAAOA,GAC9CqC,EAAOsB,OAAOH,EAAIrC,OAAS0G,IAEtB7H,GAiCT8D,OAAQ,SAASxB,EAAO4B,EAAWC,GACjC,OAAK7B,EAAM4E,SAAWH,GAAW,UAAUtE,KAAKyB,IAC3C5B,EAAM4E,SAAWH,GAAW,OAAOtE,KAAKyB,GACpC1C,EAASsC,OAAOxB,EAAMF,KAAM8B,EAAWC,GACzC7B,EAAM4E,QAAQpD,OAAOxB,EAAM6E,SAAUjD,EAAWC,IAGzD2D,kBAAmB,KACnBC,gBAAiB,KACjBC,YAAa,KAEb3D,UAAW,SAAS/B,GAAS,MAAO,CAACA,MAAOA,EAAM6E,SAAUhF,KAAMG,EAAM4E,aAEzE,YAAa,SAEhBrH,EAAWyE,WAAW,0BAA2B,OACjDzE,EAAWyE,WAAW,+BAAgC,CAAC5C,KAAM,MAAOuF,WAAW,IAC/EpH,EAAWyE,WAAW,aAAc0B,GAnOlCzB,CAAI,EAAQ,MAAyB,EAAQ,MAA2B,EAAQ,Q,gBCKjF,SAAS1E,GACZ,aAEA,IAAIoI,EAAa,CACfC,gBAAiB,CAAC,MAAQ,EAAM,MAAQ,EAAM,IAAM,EAAM,KAAO,EAAM,SAAW,EAChE,OAAS,EAAM,OAAS,EAAM,IAAM,EAAM,KAAO,EAAM,OAAS,EAChE,QAAU,EAAM,MAAQ,EAAM,MAAQ,EAAM,OAAS,EAAM,QAAU,EACrE,OAAS,EAAM,KAAO,EAAM,UAAY,GAC1DC,iBAAkB,CAAC,IAAM,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,GAAK,EAC/D,IAAM,EAAM,IAAM,EAAM,OAAS,EAAM,IAAM,EAAM,OAAS,EAC5D,IAAM,EAAM,IAAM,GACrCC,gBAAiB,CACf,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,GACb,OAAU,CAAC,QAAU,EAAM,UAAY,GACvC,SAAY,CAAC,UAAY,GACzB,EAAK,CAAC,SAAW,EAAM,SAAW,EAAM,OAAS,EAAM,YAAc,EAAM,KAAO,EAC5E,KAAO,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,MAAQ,EACnE,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAClE,QAAU,EAAM,QAAU,EAAM,IAAM,EAAM,MAAQ,EAAM,KAAO,EAAM,IAAM,EAC7E,GAAK,EAAM,KAAO,EAAM,SAAW,EAAM,OAAS,EAAM,IAAM,GACpE,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,GACnB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,IAEfC,YAAa,CAAC,KAAO,GACrBC,eAAe,EACfC,cAAc,EACdC,UAAU,GAGRC,EAAY,CACdP,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAa,GACbC,eAAe,EACfC,cAAc,EACd1G,qBAAqB,EACrB2G,UAAU,GAGZ3I,EAAWwB,WAAW,OAAO,SAASqH,EAAYC,GAChD,IAOIC,EAAMC,EAPNC,EAAaJ,EAAWI,WACxBxH,EAAS,GACTyH,EAAWJ,EAAQnH,SAAWyG,EAAaQ,EAC/C,IAAK,IAAIO,KAAQD,EAAUzH,EAAO0H,GAAQD,EAASC,GACnD,IAAK,IAAIA,KAAQL,EAASrH,EAAO0H,GAAQL,EAAQK,GAKjD,SAASC,EAAO5G,EAAQC,GACtB,SAAS4G,EAAMC,GAEb,OADA7G,EAAM6C,SAAWgE,EACVA,EAAO9G,EAAQC,GAGxB,IAAI8G,EAAK/G,EAAOoD,OAChB,MAAU,KAAN2D,EACE/G,EAAOsE,IAAI,KACTtE,EAAOsE,IAAI,KACTtE,EAAOhC,MAAM,UAAkB6I,EAAMG,EAAQ,OAAQ,QAC7C,KACHhH,EAAOhC,MAAM,MACf6I,EAAMG,EAAQ,UAAW,WACvBhH,EAAOhC,MAAM,WAAW,GAAM,IACvCgC,EAAOmE,SAAS,aACT0C,EAAMI,EAAQ,KAEd,KAEAjH,EAAOsE,IAAI,MACpBtE,EAAOmE,SAAS,aAChBlE,EAAM6C,SAAWkE,EAAQ,OAAQ,MAC1B,SAEPT,EAAOvG,EAAOsE,IAAI,KAAO,WAAa,UACtCrE,EAAM6C,SAAWtC,EACV,eAEM,KAANuG,GAEL/G,EAAOsE,IAAI,KACTtE,EAAOsE,IAAI,KACRtE,EAAOmE,SAAS,eAAiBnE,EAAOsE,IAAI,KAE5CtE,EAAOmE,SAAS,SAAWnE,EAAOsE,IAAI,KAGxCtE,EAAOmE,SAAS,cAAgBnE,EAAOsE,IAAI,MAEtC,OAAS,SAErBtE,EAAOmE,SAAS,SACT,MAKX,SAAS3D,EAAMR,EAAQC,GACrB,IAwBmBiH,EACfC,EAzBAJ,EAAK/G,EAAOoD,OAChB,GAAU,KAAN2D,GAAoB,KAANA,GAAa/G,EAAOsE,IAAI,KAGxC,OAFArE,EAAM6C,SAAW8D,EACjBL,EAAa,KAANQ,EAAY,SAAW,eACvB,cACF,GAAU,KAANA,EAET,OADAR,EAAO,SACA,KACF,GAAU,KAANQ,EAAW,CACpB9G,EAAM6C,SAAW8D,EACjB3G,EAAMA,MAAQmH,EACdnH,EAAM5B,QAAU4B,EAAMoH,SAAW,KACjC,IAAIjE,EAAOnD,EAAM6C,SAAS9C,EAAQC,GAClC,OAAOmD,EAAOA,EAAO,aAAe,YAC/B,MAAI,SAAShD,KAAK2G,IACvB9G,EAAM6C,UASWoE,EATYH,GAU3BI,EAAU,SAASnH,EAAQC,GAC7B,MAAQD,EAAO0B,OACb,GAAI1B,EAAOoD,QAAU8D,EAAO,CAC1BjH,EAAM6C,SAAWtC,EACjB,MAGJ,MAAO,WAED8G,eAAgB,EACjBH,GAnBLlH,EAAMsH,eAAiBvH,EAAOwH,SACvBvH,EAAM6C,SAAS9C,EAAQC,KAE9BD,EAAOhC,MAAM,4CACN,QAkBX,SAASgJ,EAAQrJ,EAAO8J,GACtB,OAAO,SAASzH,EAAQC,GACtB,MAAQD,EAAO0B,OAAO,CACpB,GAAI1B,EAAOhC,MAAMyJ,GAAa,CAC5BxH,EAAM6C,SAAW8D,EACjB,MAEF5G,EAAOoD,OAET,OAAOzF,GAIX,SAASsJ,EAAQS,GACf,OAAO,SAAS1H,EAAQC,GAEtB,IADA,IAAI8G,EAC2B,OAAvBA,EAAK/G,EAAOoD,SAAiB,CACnC,GAAU,KAAN2D,EAEF,OADA9G,EAAM6C,SAAWmE,EAAQS,EAAQ,GAC1BzH,EAAM6C,SAAS9C,EAAQC,GACzB,GAAU,KAAN8G,EAAW,CACpB,GAAa,GAATW,EAAY,CACdzH,EAAM6C,SAAW8D,EACjB,MAGA,OADA3G,EAAM6C,SAAWmE,EAAQS,EAAQ,GAC1BzH,EAAM6C,SAAS9C,EAAQC,IAIpC,MAAO,QAIX,SAAS0H,EAAQ1H,EAAO5B,EAASuJ,GAC/BC,KAAKxC,KAAOpF,EAAMmF,QAClByC,KAAKxJ,QAAUA,GAAW,GAC1BwJ,KAAKpG,OAASxB,EAAM6H,SACpBD,KAAKD,YAAcA,GACf3I,EAAO+G,YAAYzF,eAAelC,IAAa4B,EAAMmF,SAAWnF,EAAMmF,QAAQ2C,YAChFF,KAAKE,UAAW,GAEpB,SAASC,EAAW/H,GACdA,EAAMmF,UAASnF,EAAMmF,QAAUnF,EAAMmF,QAAQC,MAEnD,SAAS4C,EAAgBhI,EAAOiI,GAE9B,IADA,IAAIC,IACS,CACX,IAAKlI,EAAMmF,QACT,OAGF,GADA+C,EAAgBlI,EAAMmF,QAAQ/G,SACzBY,EAAO8G,gBAAgBxF,eAAe4H,KACtClJ,EAAO8G,gBAAgBoC,GAAe5H,eAAe2H,GACxD,OAEFF,EAAW/H,IAIf,SAASmH,EAAUb,EAAMvG,EAAQC,GAC/B,MAAY,WAARsG,GACFtG,EAAMoH,SAAWrH,EAAOwH,SACjBY,GACU,YAAR7B,EACF8B,EAEAjB,EAGX,SAASgB,EAAa7B,EAAMvG,EAAQC,GAClC,MAAY,QAARsG,GACFtG,EAAM5B,QAAU2B,EAAOK,UACvBmG,EAAW,MACJ8B,GACErJ,EAAOO,qBAA+B,UAAR+G,GACvCC,EAAW,cACJ8B,EAAU/B,EAAMvG,EAAQC,KAE/BuG,EAAW,QACJ4B,GAGX,SAASC,EAAkB9B,EAAMvG,EAAQC,GACvC,GAAY,QAARsG,EAAgB,CAClB,IAAIlI,EAAU2B,EAAOK,UAIrB,OAHIJ,EAAMmF,SAAWnF,EAAMmF,QAAQ/G,SAAWA,GAC1CY,EAAO6G,iBAAiBvF,eAAeN,EAAMmF,QAAQ/G,UACvD2J,EAAW/H,GACRA,EAAMmF,SAAWnF,EAAMmF,QAAQ/G,SAAWA,IAAoC,IAAxBY,EAAOsJ,cAChE/B,EAAW,MACJgC,IAEPhC,EAAW,YACJiC,GAEJ,OAAIxJ,EAAOO,qBAA+B,UAAR+G,GACvCC,EAAW,cACJgC,EAAWjC,EAAMvG,EAAQC,KAEhCuG,EAAW,QACJiC,GAIX,SAASD,EAAWjC,EAAM9B,EAASxE,GACjC,MAAY,UAARsG,GACFC,EAAW,QACJgC,IAETR,EAAW/H,GACJmH,GAET,SAASqB,EAAclC,EAAMvG,EAAQC,GAEnC,OADAuG,EAAW,QACJgC,EAAWjC,EAAMvG,EAAQC,GAGlC,SAASqI,EAAU/B,EAAM9B,EAASxE,GAChC,GAAY,QAARsG,EAEF,OADAC,EAAW,YACJkC,EACF,GAAY,UAARnC,GAA4B,gBAARA,EAAwB,CACrD,IAAIlI,EAAU4B,EAAM5B,QAASgJ,EAAWpH,EAAMoH,SAS9C,OARApH,EAAM5B,QAAU4B,EAAMoH,SAAW,KACrB,gBAARd,GACAtH,EAAO4G,gBAAgBtF,eAAelC,GACxC4J,EAAgBhI,EAAO5B,IAEvB4J,EAAgBhI,EAAO5B,GACvB4B,EAAMmF,QAAU,IAAIuC,EAAQ1H,EAAO5B,EAASgJ,GAAYpH,EAAM6H,WAEzDV,EAGT,OADAZ,EAAW,QACJ8B,EAET,SAASI,EAAYnC,EAAMvG,EAAQC,GACjC,MAAY,UAARsG,EAAyBoC,GACxB1J,EAAOiH,eAAcM,EAAW,SAC9B8B,EAAU/B,EAAMvG,EAAQC,IAEjC,SAAS0I,EAAepC,EAAMvG,EAAQC,GACpC,MAAY,UAARsG,EAAyBqC,EACjB,QAARrC,GAAkBtH,EAAOgH,eAAgBO,EAAW,SAAiB8B,IACzE9B,EAAW,QACJ8B,EAAU/B,EAAMvG,EAAQC,IAEjC,SAAS2I,EAAmBrC,EAAMvG,EAAQC,GACxC,MAAY,UAARsG,EAAyBqC,EACtBN,EAAU/B,EAAMvG,EAAQC,GAGjC,OAlMA2G,EAAOiC,UAAW,EAkMX,CACLrH,WAAY,SAASsH,GACnB,IAAI7I,EAAQ,CAAC6C,SAAU8D,EACV3G,MAAOmH,EACPU,SAAUgB,GAAc,EACxBzK,QAAS,KAAMgJ,SAAU,KACzBjC,QAAS,MAEtB,OADkB,MAAd0D,IAAoB7I,EAAM6I,WAAaA,GACpC7I,GAGTC,MAAO,SAASF,EAAQC,GAItB,IAHKA,EAAM5B,SAAW2B,EAAOmF,QAC3BlF,EAAM6H,SAAW9H,EAAO+I,eAEtB/I,EAAOgJ,WAAY,OAAO,KAC9BzC,EAAO,KACP,IAAI5I,EAAQsC,EAAM6C,SAAS9C,EAAQC,GAOnC,OANKtC,GAAS4I,IAAkB,WAAT5I,IACrB6I,EAAW,KACXvG,EAAMA,MAAQA,EAAMA,MAAMsG,GAAQ5I,EAAOqC,EAAQC,GAC7CuG,IACF7I,EAAoB,SAAZ6I,EAAsB7I,EAAQ,SAAW6I,IAE9C7I,GAGT8D,OAAQ,SAASxB,EAAO4B,EAAWoH,GACjC,IAAI7D,EAAUnF,EAAMmF,QAEpB,GAAInF,EAAM6C,SAASwE,cACjB,OAAIrH,EAAMoH,UAAYpH,EAAM6H,SACnB7H,EAAMsH,eAAiB,EAEvBtH,EAAM6H,SAAWrB,EAE5B,GAAIrB,GAAWA,EAAQ2C,SAAU,OAAOvK,EAAWuE,KACnD,GAAI9B,EAAM6C,UAAYtC,GAASP,EAAM6C,UAAY8D,EAC/C,OAAOqC,EAAWA,EAASjL,MAAM,UAAU,GAAGc,OAAS,EAEzD,GAAImB,EAAM5B,QACR,OAAyC,IAArCY,EAAOM,0BACFU,EAAMoH,SAAWpH,EAAM5B,QAAQS,OAAS,EAExCmB,EAAMoH,SAAWZ,GAAcxH,EAAOK,0BAA4B,GAE7E,GAAIL,EAAOiK,YAAc,cAAc9I,KAAKyB,GAAY,OAAO,EAC/D,IAAIsH,EAAWtH,GAAa,sBAAsB1D,KAAK0D,GACvD,GAAIsH,GAAYA,EAAS,GACvB,KAAO/D,GAAS,CACd,GAAIA,EAAQ/G,SAAW8K,EAAS,GAAI,CAClC/D,EAAUA,EAAQC,KAClB,MACK,IAAIpG,EAAO6G,iBAAiBvF,eAAe6E,EAAQ/G,SAGxD,MAFA+G,EAAUA,EAAQC,UAKjB,GAAI8D,EACT,KAAO/D,GAAS,CACd,IAAIgE,EAAWnK,EAAO8G,gBAAgBX,EAAQ/G,SAC9C,IAAI+K,IAAYA,EAAS7I,eAAe4I,EAAS,IAG/C,MAFA/D,EAAUA,EAAQC,KAKxB,KAAOD,GAAWA,EAAQC,OAASD,EAAQwC,aACzCxC,EAAUA,EAAQC,KACpB,OAAID,EAAgBA,EAAQ3D,OAASgF,EACzBxG,EAAM6I,YAAc,GAGlCO,cAAe,gBACf5D,kBAAmB,UACnBC,gBAAiB,SAEjB4D,cAAerK,EAAOE,SAAW,OAAS,MAC1CyE,WAAY3E,EAAOE,SAAW,OAAS,MAEvCoK,cAAe,SAAStJ,GAClBA,EAAMA,OAAS0I,IACjB1I,EAAMA,MAAQqI,IAGlBkB,cAAe,SAASvJ,GACtB,OAAOA,EAAM5B,QAAU,CAACgB,KAAMY,EAAM5B,QAAS+C,MAAqB,YAAdnB,EAAMsG,MAAsB,MAGlFkD,kBAAmB,SAASxJ,GAE1B,IADA,IAAImF,EAAU,GACLsE,EAAKzJ,EAAMmF,QAASsE,EAAIA,EAAKA,EAAGrE,KACvCD,EAAQZ,KAAKkF,EAAGrL,SAClB,OAAO+G,EAAQuE,eAKrBnM,EAAWyE,WAAW,WAAY,OAClCzE,EAAWyE,WAAW,kBAAmB,OACpCzE,EAAWoM,UAAUrJ,eAAe,cACvC/C,EAAWyE,WAAW,YAAa,CAAC5C,KAAM,MAAOF,UAAU,IArZzD+C,CAAI,EAAQ","file":"6702.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../clike/clike\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../clike/clike\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function keywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  // Helper for phpString\n  function matchSequence(list, end, escapes) {\n    if (list.length == 0) return phpString(end);\n    return function (stream, state) {\n      var patterns = list[0];\n      for (var i = 0; i < patterns.length; i++) if (stream.match(patterns[i][0])) {\n        state.tokenize = matchSequence(list.slice(1), end);\n        return patterns[i][1];\n      }\n      state.tokenize = phpString(end, escapes);\n      return \"string\";\n    };\n  }\n  function phpString(closing, escapes) {\n    return function(stream, state) { return phpString_(stream, state, closing, escapes); };\n  }\n  function phpString_(stream, state, closing, escapes) {\n    // \"Complex\" syntax\n    if (escapes !== false && stream.match(\"${\", false) || stream.match(\"{$\", false)) {\n      state.tokenize = null;\n      return \"string\";\n    }\n\n    // Simple syntax\n    if (escapes !== false && stream.match(/^\\$[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      // After the variable name there may appear array or object operator.\n      if (stream.match(\"[\", false)) {\n        // Match array operator\n        state.tokenize = matchSequence([\n          [[\"[\", null]],\n          [[/\\d[\\w\\.]*/, \"number\"],\n           [/\\$[a-zA-Z_][a-zA-Z0-9_]*/, \"variable-2\"],\n           [/[\\w\\$]+/, \"variable\"]],\n          [[\"]\", null]]\n        ], closing, escapes);\n      }\n      if (stream.match(/^->\\w/, false)) {\n        // Match object operator\n        state.tokenize = matchSequence([\n          [[\"->\", null]],\n          [[/[\\w]+/, \"variable\"]]\n        ], closing, escapes);\n      }\n      return \"variable-2\";\n    }\n\n    var escaped = false;\n    // Normal string\n    while (!stream.eol() &&\n           (escaped || escapes === false ||\n            (!stream.match(\"{$\", false) &&\n             !stream.match(/^(\\$[a-zA-Z_][a-zA-Z0-9_]*|\\$\\{)/, false)))) {\n      if (!escaped && stream.match(closing)) {\n        state.tokenize = null;\n        state.tokStack.pop(); state.tokStack.pop();\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  var phpKeywords = \"abstract and array as break case catch class clone const continue declare default \" +\n    \"do else elseif enddeclare endfor endforeach endif endswitch endwhile extends final \" +\n    \"for foreach function global goto if implements interface instanceof namespace \" +\n    \"new or private protected public static switch throw trait try use var while xor \" +\n    \"die echo empty exit eval include include_once isset list require require_once return \" +\n    \"print unset __halt_compiler self static parent yield insteadof finally\";\n  var phpAtoms = \"true false null TRUE FALSE NULL __CLASS__ __DIR__ __FILE__ __LINE__ __METHOD__ __FUNCTION__ __NAMESPACE__ __TRAIT__\";\n  var phpBuiltin = \"func_num_args func_get_arg func_get_args strlen strcmp strncmp strcasecmp strncasecmp each error_reporting define defined trigger_error user_error set_error_handler restore_error_handler get_declared_classes get_loaded_extensions extension_loaded get_extension_funcs debug_backtrace constant bin2hex hex2bin sleep usleep time mktime gmmktime strftime gmstrftime strtotime date gmdate getdate localtime checkdate flush wordwrap htmlspecialchars htmlentities html_entity_decode md5 md5_file crc32 getimagesize image_type_to_mime_type phpinfo phpversion phpcredits strnatcmp strnatcasecmp substr_count strspn strcspn strtok strtoupper strtolower strpos strrpos strrev hebrev hebrevc nl2br basename dirname pathinfo stripslashes stripcslashes strstr stristr strrchr str_shuffle str_word_count strcoll substr substr_replace quotemeta ucfirst ucwords strtr addslashes addcslashes rtrim str_replace str_repeat count_chars chunk_split trim ltrim strip_tags similar_text explode implode setlocale localeconv parse_str str_pad chop strchr sprintf printf vprintf vsprintf sscanf fscanf parse_url urlencode urldecode rawurlencode rawurldecode readlink linkinfo link unlink exec system escapeshellcmd escapeshellarg passthru shell_exec proc_open proc_close rand srand getrandmax mt_rand mt_srand mt_getrandmax base64_decode base64_encode abs ceil floor round is_finite is_nan is_infinite bindec hexdec octdec decbin decoct dechex base_convert number_format fmod ip2long long2ip getenv putenv getopt microtime gettimeofday getrusage uniqid quoted_printable_decode set_time_limit get_cfg_var magic_quotes_runtime set_magic_quotes_runtime get_magic_quotes_gpc get_magic_quotes_runtime import_request_variables error_log serialize unserialize memory_get_usage memory_get_peak_usage var_dump var_export debug_zval_dump print_r highlight_file show_source highlight_string ini_get ini_get_all ini_set ini_alter ini_restore get_include_path set_include_path restore_include_path setcookie header headers_sent connection_aborted connection_status ignore_user_abort parse_ini_file is_uploaded_file move_uploaded_file intval floatval doubleval strval gettype settype is_null is_resource is_bool is_long is_float is_int is_integer is_double is_real is_numeric is_string is_array is_object is_scalar ereg ereg_replace eregi eregi_replace split spliti join sql_regcase dl pclose popen readfile rewind rmdir umask fclose feof fgetc fgets fgetss fread fopen fpassthru ftruncate fstat fseek ftell fflush fwrite fputs mkdir rename copy tempnam tmpfile file file_get_contents file_put_contents stream_select stream_context_create stream_context_set_params stream_context_set_option stream_context_get_options stream_filter_prepend stream_filter_append fgetcsv flock get_meta_tags stream_set_write_buffer set_file_buffer set_socket_blocking stream_set_blocking socket_set_blocking stream_get_meta_data stream_register_wrapper stream_wrapper_register stream_set_timeout socket_set_timeout socket_get_status realpath fnmatch fsockopen pfsockopen pack unpack get_browser crypt opendir closedir chdir getcwd rewinddir readdir dir glob fileatime filectime filegroup fileinode filemtime fileowner fileperms filesize filetype file_exists is_writable is_writeable is_readable is_executable is_file is_dir is_link stat lstat chown touch clearstatcache mail ob_start ob_flush ob_clean ob_end_flush ob_end_clean ob_get_flush ob_get_clean ob_get_length ob_get_level ob_get_status ob_get_contents ob_implicit_flush ob_list_handlers ksort krsort natsort natcasesort asort arsort sort rsort usort uasort uksort shuffle array_walk count end prev next reset current key min max in_array array_search extract compact array_fill range array_multisort array_push array_pop array_shift array_unshift array_splice array_slice array_merge array_merge_recursive array_keys array_values array_count_values array_reverse array_reduce array_pad array_flip array_change_key_case array_rand array_unique array_intersect array_intersect_assoc array_diff array_diff_assoc array_sum array_filter array_map array_chunk array_key_exists array_intersect_key array_combine array_column pos sizeof key_exists assert assert_options version_compare ftok str_rot13 aggregate session_name session_module_name session_save_path session_id session_regenerate_id session_decode session_register session_unregister session_is_registered session_encode session_start session_destroy session_unset session_set_save_handler session_cache_limiter session_cache_expire session_set_cookie_params session_get_cookie_params session_write_close preg_match preg_match_all preg_replace preg_replace_callback preg_split preg_quote preg_grep overload ctype_alnum ctype_alpha ctype_cntrl ctype_digit ctype_lower ctype_graph ctype_print ctype_punct ctype_space ctype_upper ctype_xdigit virtual apache_request_headers apache_note apache_lookup_uri apache_child_terminate apache_setenv apache_response_headers apache_get_version getallheaders mysql_connect mysql_pconnect mysql_close mysql_select_db mysql_create_db mysql_drop_db mysql_query mysql_unbuffered_query mysql_db_query mysql_list_dbs mysql_list_tables mysql_list_fields mysql_list_processes mysql_error mysql_errno mysql_affected_rows mysql_insert_id mysql_result mysql_num_rows mysql_num_fields mysql_fetch_row mysql_fetch_array mysql_fetch_assoc mysql_fetch_object mysql_data_seek mysql_fetch_lengths mysql_fetch_field mysql_field_seek mysql_free_result mysql_field_name mysql_field_table mysql_field_len mysql_field_type mysql_field_flags mysql_escape_string mysql_real_escape_string mysql_stat mysql_thread_id mysql_client_encoding mysql_get_client_info mysql_get_host_info mysql_get_proto_info mysql_get_server_info mysql_info mysql mysql_fieldname mysql_fieldtable mysql_fieldlen mysql_fieldtype mysql_fieldflags mysql_selectdb mysql_createdb mysql_dropdb mysql_freeresult mysql_numfields mysql_numrows mysql_listdbs mysql_listtables mysql_listfields mysql_db_name mysql_dbname mysql_tablename mysql_table_name pg_connect pg_pconnect pg_close pg_connection_status pg_connection_busy pg_connection_reset pg_host pg_dbname pg_port pg_tty pg_options pg_ping pg_query pg_send_query pg_cancel_query pg_fetch_result pg_fetch_row pg_fetch_assoc pg_fetch_array pg_fetch_object pg_fetch_all pg_affected_rows pg_get_result pg_result_seek pg_result_status pg_free_result pg_last_oid pg_num_rows pg_num_fields pg_field_name pg_field_num pg_field_size pg_field_type pg_field_prtlen pg_field_is_null pg_get_notify pg_get_pid pg_result_error pg_last_error pg_last_notice pg_put_line pg_end_copy pg_copy_to pg_copy_from pg_trace pg_untrace pg_lo_create pg_lo_unlink pg_lo_open pg_lo_close pg_lo_read pg_lo_write pg_lo_read_all pg_lo_import pg_lo_export pg_lo_seek pg_lo_tell pg_escape_string pg_escape_bytea pg_unescape_bytea pg_client_encoding pg_set_client_encoding pg_meta_data pg_convert pg_insert pg_update pg_delete pg_select pg_exec pg_getlastoid pg_cmdtuples pg_errormessage pg_numrows pg_numfields pg_fieldname pg_fieldsize pg_fieldtype pg_fieldnum pg_fieldprtlen pg_fieldisnull pg_freeresult pg_result pg_loreadall pg_locreate pg_lounlink pg_loopen pg_loclose pg_loread pg_lowrite pg_loimport pg_loexport http_response_code get_declared_traits getimagesizefromstring socket_import_stream stream_set_chunk_size trait_exists header_register_callback class_uses session_status session_register_shutdown echo print global static exit array empty eval isset unset die include require include_once require_once json_decode json_encode json_last_error json_last_error_msg curl_close curl_copy_handle curl_errno curl_error curl_escape curl_exec curl_file_create curl_getinfo curl_init curl_multi_add_handle curl_multi_close curl_multi_exec curl_multi_getcontent curl_multi_info_read curl_multi_init curl_multi_remove_handle curl_multi_select curl_multi_setopt curl_multi_strerror curl_pause curl_reset curl_setopt_array curl_setopt curl_share_close curl_share_init curl_share_setopt curl_strerror curl_unescape curl_version mysqli_affected_rows mysqli_autocommit mysqli_change_user mysqli_character_set_name mysqli_close mysqli_commit mysqli_connect_errno mysqli_connect_error mysqli_connect mysqli_data_seek mysqli_debug mysqli_dump_debug_info mysqli_errno mysqli_error_list mysqli_error mysqli_fetch_all mysqli_fetch_array mysqli_fetch_assoc mysqli_fetch_field_direct mysqli_fetch_field mysqli_fetch_fields mysqli_fetch_lengths mysqli_fetch_object mysqli_fetch_row mysqli_field_count mysqli_field_seek mysqli_field_tell mysqli_free_result mysqli_get_charset mysqli_get_client_info mysqli_get_client_stats mysqli_get_client_version mysqli_get_connection_stats mysqli_get_host_info mysqli_get_proto_info mysqli_get_server_info mysqli_get_server_version mysqli_info mysqli_init mysqli_insert_id mysqli_kill mysqli_more_results mysqli_multi_query mysqli_next_result mysqli_num_fields mysqli_num_rows mysqli_options mysqli_ping mysqli_prepare mysqli_query mysqli_real_connect mysqli_real_escape_string mysqli_real_query mysqli_reap_async_query mysqli_refresh mysqli_rollback mysqli_select_db mysqli_set_charset mysqli_set_local_infile_default mysqli_set_local_infile_handler mysqli_sqlstate mysqli_ssl_set mysqli_stat mysqli_stmt_init mysqli_store_result mysqli_thread_id mysqli_thread_safe mysqli_use_result mysqli_warning_count\";\n  CodeMirror.registerHelper(\"hintWords\", \"php\", [phpKeywords, phpAtoms, phpBuiltin].join(\" \").split(\" \"));\n  CodeMirror.registerHelper(\"wordChars\", \"php\", /[\\w$]/);\n\n  var phpConfig = {\n    name: \"clike\",\n    helperType: \"php\",\n    keywords: keywords(phpKeywords),\n    blockKeywords: keywords(\"catch do else elseif for foreach if switch try while finally\"),\n    defKeywords: keywords(\"class function interface namespace trait\"),\n    atoms: keywords(phpAtoms),\n    builtin: keywords(phpBuiltin),\n    multiLineStrings: true,\n    hooks: {\n      \"$\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"variable-2\";\n      },\n      \"<\": function(stream, state) {\n        var before;\n        if (before = stream.match(/^<<\\s*/)) {\n          var quoted = stream.eat(/['\"]/);\n          stream.eatWhile(/[\\w\\.]/);\n          var delim = stream.current().slice(before[0].length + (quoted ? 2 : 1));\n          if (quoted) stream.eat(quoted);\n          if (delim) {\n            (state.tokStack || (state.tokStack = [])).push(delim, 0);\n            state.tokenize = phpString(delim, quoted != \"'\");\n            return \"string\";\n          }\n        }\n        return false;\n      },\n      \"#\": function(stream) {\n        while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n        return \"comment\";\n      },\n      \"/\": function(stream) {\n        if (stream.eat(\"/\")) {\n          while (!stream.eol() && !stream.match(\"?>\", false)) stream.next();\n          return \"comment\";\n        }\n        return false;\n      },\n      '\"': function(_stream, state) {\n        (state.tokStack || (state.tokStack = [])).push('\"', 0);\n        state.tokenize = phpString('\"');\n        return \"string\";\n      },\n      \"{\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length)\n          state.tokStack[state.tokStack.length - 1]++;\n        return false;\n      },\n      \"}\": function(_stream, state) {\n        if (state.tokStack && state.tokStack.length > 0 &&\n            !--state.tokStack[state.tokStack.length - 1]) {\n          state.tokenize = phpString(state.tokStack[state.tokStack.length - 2]);\n        }\n        return false;\n      }\n    }\n  };\n\n  CodeMirror.defineMode(\"php\", function(config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, (parserConfig && parserConfig.htmlMode) || \"text/html\");\n    var phpMode = CodeMirror.getMode(config, phpConfig);\n\n    function dispatch(stream, state) {\n      var isPHP = state.curMode == phpMode;\n      if (stream.sol() && state.pending && state.pending != '\"' && state.pending != \"'\") state.pending = null;\n      if (!isPHP) {\n        if (stream.match(/^<\\?\\w*/)) {\n          state.curMode = phpMode;\n          if (!state.php) state.php = CodeMirror.startState(phpMode, htmlMode.indent(state.html, \"\", \"\"))\n          state.curState = state.php;\n          return \"meta\";\n        }\n        if (state.pending == '\"' || state.pending == \"'\") {\n          while (!stream.eol() && stream.next() != state.pending) {}\n          var style = \"string\";\n        } else if (state.pending && stream.pos < state.pending.end) {\n          stream.pos = state.pending.end;\n          var style = state.pending.style;\n        } else {\n          var style = htmlMode.token(stream, state.curState);\n        }\n        if (state.pending) state.pending = null;\n        var cur = stream.current(), openPHP = cur.search(/<\\?/), m;\n        if (openPHP != -1) {\n          if (style == \"string\" && (m = cur.match(/[\\'\\\"]$/)) && !/\\?>/.test(cur)) state.pending = m[0];\n          else state.pending = {end: stream.pos, style: style};\n          stream.backUp(cur.length - openPHP);\n        }\n        return style;\n      } else if (isPHP && state.php.tokenize == null && stream.match(\"?>\")) {\n        state.curMode = htmlMode;\n        state.curState = state.html;\n        if (!state.php.context.prev) state.php = null;\n        return \"meta\";\n      } else {\n        return phpMode.token(stream, state.curState);\n      }\n    }\n\n    return {\n      startState: function() {\n        var html = CodeMirror.startState(htmlMode)\n        var php = parserConfig.startOpen ? CodeMirror.startState(phpMode) : null\n        return {html: html,\n                php: php,\n                curMode: parserConfig.startOpen ? phpMode : htmlMode,\n                curState: parserConfig.startOpen ? php : html,\n                pending: null};\n      },\n\n      copyState: function(state) {\n        var html = state.html, htmlNew = CodeMirror.copyState(htmlMode, html),\n            php = state.php, phpNew = php && CodeMirror.copyState(phpMode, php), cur;\n        if (state.curMode == htmlMode) cur = htmlNew;\n        else cur = phpNew;\n        return {html: htmlNew, php: phpNew, curMode: state.curMode, curState: cur,\n                pending: state.pending};\n      },\n\n      token: dispatch,\n\n      indent: function(state, textAfter, line) {\n        if ((state.curMode != phpMode && /^\\s*<\\//.test(textAfter)) ||\n            (state.curMode == phpMode && /^\\?>/.test(textAfter)))\n          return htmlMode.indent(state.html, textAfter, line);\n        return state.curMode.indent(state.curState, textAfter, line);\n      },\n\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\",\n\n      innerMode: function(state) { return {state: state.curState, mode: state.curMode}; }\n    };\n  }, \"htmlmixed\", \"clike\");\n\n  CodeMirror.defineMIME(\"application/x-httpd-php\", \"php\");\n  CodeMirror.defineMIME(\"application/x-httpd-php-open\", {name: \"php\", startOpen: true});\n  CodeMirror.defineMIME(\"text/x-php\", phpConfig);\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"sourceRoot":""}