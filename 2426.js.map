{"version":3,"sources":["webpack://plantilla-visor-react/./node_modules/codemirror/addon/mode/multiplex.js","webpack://plantilla-visor-react/./node_modules/codemirror/addon/mode/overlay.js","webpack://plantilla-visor-react/./node_modules/codemirror/addon/mode/simple.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/coffeescript/coffeescript.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/handlebars/handlebars.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/sass/sass.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/vue/vue.js"],"names":["CodeMirror","multiplexingMode","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","startState","innerActive","inner","startingInner","copyState","state","mode","token","stream","curInner","oldContent","close","sol","this","pos","parseDelimiters","match","delimStyle","innerToken","start","innerStyle","cutOff","Infinity","i","other","open","outerIndent","indent","possibleOuterIndent","Pass","outerToken","textAfter","line","blankLine","electricChars","innerMode","mod","overlayMode","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","combineTokens","baseToken","overlayToken","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","unicode","source","String","Rule","data","next","push","regex","apply","replace","result","asToken","tokenFunction","config","pending","pend","shift","text","local","end","tok","endToken","localState","endScan","current","curState","rule","matches","stack","pop","enterLocalMode","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","forceEnd","indentFunction","meta","dontIndentStates","arr","rules","scan","dedentIfLineStart","defineSimpleMode","defineMode","simpleMode","states_","hasIndentation","list","orig","s","conf","parserConf","ERRORCLASS","wordRegexp","words","operators","delimiters","identifiers","atProp","wordOperators","indentKeywords","keywords","concat","stringPrefixes","regexPrefixes","constants","tokenBase","scope","align","scopeOffset","offset","eatSpace","lineOffset","type","ch","peek","skipToEnd","tokenize","longComment","floatLiteral","intLiteral","tokenFactory","delimiter","singleline","outclass","eol","eatWhile","eat","singleLineStringErrors","alignOffset","prev","column","_indent","matched","basecolumn","fillAlign","style","delimiter_index","tokenLexer","closer","charAt","closes","lineComment","fold","defineMIME","handlebars_raw","handlebars","dash_comment","comment","blockCommentStart","blockCommentEnd","parserConfig","cssMode","mimeModes","propertyKeywords","colorKeywords","valueKeywords","fontProperties","word","keywordsRegexp","opRegexp","pseudoElementsRegexp","isEndLine","urlTokens","tokenizer","buildStringTokenizer","multiLine","skipTo","quote","greedy","stringTokenizer","nextChar","peekChar","previousChar","cursorHalf","buildInterpolationTokenizer","currentTokenizer","indentCount","currentOffset","scopes","unshift","toLowerCase","prevProp","definedVars","definedMixins","withCurrentIndent","newScopes","lastToken","content","tagLanguages","script","template","backdrop","tags"],"mappings":"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","file":"2426.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\"\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                (state.pending || (state.pending = [])).push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"coffeescript\", function(conf, parserConf) {\n  var ERRORCLASS = \"error\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n  var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n  var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n  var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                  \"is\", \"isnt\", \"in\",\n                                  \"instanceof\", \"typeof\"]);\n  var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                        \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n  var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                        \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                        \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\n  var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\n  indentKeywords = wordRegexp(indentKeywords);\n\n\n  var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n  var regexPrefixes = /^(\\/{3}|\\/)/;\n  var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n  var constants = wordRegexp(commonConstants);\n\n  // Tokenizers\n  function tokenBase(stream, state) {\n    // Handle scope changes\n    if (stream.sol()) {\n      if (state.scope.align === null) state.scope.align = false;\n      var scopeOffset = state.scope.offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n          return \"indent\";\n        } else if (lineOffset < scopeOffset) {\n          return \"dedent\";\n        }\n        return null;\n      } else {\n        if (scopeOffset > 0) {\n          dedent(stream, state);\n        }\n      }\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle docco title comment (single line)\n    if (stream.match(\"####\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle multi line comments\n    if (stream.match(\"###\")) {\n      state.tokenize = longComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Single line comment\n    if (ch === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle number literals\n    if (stream.match(/^-?[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\d+\\.\\d*/)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\.\\d+/)) {\n        floatLiteral = true;\n      }\n\n      if (floatLiteral) {\n        // prevent from getting extra . on 1..\n        if (stream.peek() == \".\"){\n          stream.backUp(1);\n        }\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^-?0x[0-9a-f]+/i)) {\n        intLiteral = true;\n      }\n      // Decimal\n      if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^-?0(?![\\dx])/i)) {\n        intLiteral = true;\n      }\n      if (intLiteral) {\n        return \"number\";\n      }\n    }\n\n    // Handle strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenFactory(stream.current(), false, \"string\");\n      return state.tokenize(stream, state);\n    }\n    // Handle regex literals\n    if (stream.match(regexPrefixes)) {\n      if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n        state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n        return state.tokenize(stream, state);\n      } else {\n        stream.backUp(1);\n      }\n    }\n\n\n\n    // Handle operators and delimiters\n    if (stream.match(operators) || stream.match(wordOperators)) {\n      return \"operator\";\n    }\n    if (stream.match(delimiters)) {\n      return \"punctuation\";\n    }\n\n    if (stream.match(constants)) {\n      return \"atom\";\n    }\n\n    if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n      return \"property\";\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(identifiers)) {\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return ERRORCLASS;\n  }\n\n  function tokenFactory(delimiter, singleline, outclass) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\/\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol()) {\n            return outclass;\n          }\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          return outclass;\n        } else {\n          stream.eat(/['\"\\/]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors) {\n          outclass = ERRORCLASS;\n        } else {\n          state.tokenize = tokenBase;\n        }\n      }\n      return outclass;\n    };\n  }\n\n  function longComment(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^#]/);\n      if (stream.match(\"###\")) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.eatWhile(\"#\");\n    }\n    return \"comment\";\n  }\n\n  function indent(stream, state, type) {\n    type = type || \"coffee\";\n    var offset = 0, align = false, alignOffset = null;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (scope.type === \"coffee\" || scope.type == \"}\") {\n        offset = scope.offset + conf.indentUnit;\n        break;\n      }\n    }\n    if (type !== \"coffee\") {\n      align = null;\n      alignOffset = stream.column() + stream.current().length;\n    } else if (state.scope.align) {\n      state.scope.align = false;\n    }\n    state.scope = {\n      offset: offset,\n      type: type,\n      prev: state.scope,\n      align: align,\n      alignOffset: alignOffset\n    };\n  }\n\n  function dedent(stream, state) {\n    if (!state.scope.prev) return;\n    if (state.scope.type === \"coffee\") {\n      var _indent = stream.indentation();\n      var matched = false;\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (_indent === scope.offset) {\n          matched = true;\n          break;\n        }\n      }\n      if (!matched) {\n        return true;\n      }\n      while (state.scope.prev && state.scope.offset !== _indent) {\n        state.scope = state.scope.prev;\n      }\n      return false;\n    } else {\n      state.scope = state.scope.prev;\n      return false;\n    }\n  }\n\n  function tokenLexer(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle scope changes.\n    if (current === \"return\") {\n      state.dedent = true;\n    }\n    if (((current === \"->\" || current === \"=>\") && stream.eol())\n        || style === \"indent\") {\n      indent(stream, state);\n    }\n    var delimiter_index = \"[({\".indexOf(current);\n    if (delimiter_index !== -1) {\n      indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n    }\n    if (indentKeywords.exec(current)){\n      indent(stream, state);\n    }\n    if (current == \"then\"){\n      dedent(stream, state);\n    }\n\n\n    if (style === \"dedent\") {\n      if (dedent(stream, state)) {\n        return ERRORCLASS;\n      }\n    }\n    delimiter_index = \"])}\".indexOf(current);\n    if (delimiter_index !== -1) {\n      while (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      if (state.scope.type == current)\n        state.scope = state.scope.prev;\n    }\n    if (state.dedent && stream.eol()) {\n      if (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      state.dedent = false;\n    }\n\n    return style;\n  }\n\n  var external = {\n    startState: function(basecolumn) {\n      return {\n        tokenize: tokenBase,\n        scope: {offset:basecolumn || 0, type:\"coffee\", prev: null, align: false},\n        prop: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var fillAlign = state.scope.align === null && state.scope;\n      if (fillAlign && stream.sol()) fillAlign.align = false;\n\n      var style = tokenLexer(stream, state);\n      if (style && style != \"comment\") {\n        if (fillAlign) fillAlign.align = true;\n        state.prop = style == \"punctuation\" && stream.current() == \".\"\n      }\n\n      return style;\n    },\n\n    indent: function(state, text) {\n      if (state.tokenize != tokenBase) return 0;\n      var scope = state.scope;\n      var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n      if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n      var closes = closer && scope.type === text.charAt(0);\n      if (scope.align)\n        return scope.alignOffset - (closes ? 1 : 0);\n      else\n        return (closes ? scope.prev : scope).offset;\n    },\n\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n// IANA registered media type\n// https://www.iana.org/assignments/media-types/\nCodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n\nCodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\nCodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"sass\", function(config) {\n  var cssMode = CodeMirror.mimeModes[\"text/css\"];\n  var propertyKeywords = cssMode.propertyKeywords || {},\n      colorKeywords = cssMode.colorKeywords || {},\n      valueKeywords = cssMode.valueKeywords || {},\n      fontProperties = cssMode.fontProperties || {};\n\n  function tokenRegexp(words) {\n    return new RegExp(\"^\" + words.join(\"|\"));\n  }\n\n  var keywords = [\"true\", \"false\", \"null\", \"auto\"];\n  var keywordsRegexp = new RegExp(\"^\" + keywords.join(\"|\"));\n\n  var operators = [\"\\\\(\", \"\\\\)\", \"=\", \">\", \"<\", \"==\", \">=\", \"<=\", \"\\\\+\", \"-\",\n                   \"\\\\!=\", \"/\", \"\\\\*\", \"%\", \"and\", \"or\", \"not\", \";\",\"\\\\{\",\"\\\\}\",\":\"];\n  var opRegexp = tokenRegexp(operators);\n\n  var pseudoElementsRegexp = /^::?[a-zA-Z_][\\w\\-]*/;\n\n  var word;\n\n  function isEndLine(stream) {\n    return !stream.peek() || stream.match(/\\s+$/, false);\n  }\n\n  function urlTokens(stream, state) {\n    var ch = stream.peek();\n\n    if (ch === \")\") {\n      stream.next();\n      state.tokenizer = tokenBase;\n      return \"operator\";\n    } else if (ch === \"(\") {\n      stream.next();\n      stream.eatSpace();\n\n      return \"operator\";\n    } else if (ch === \"'\" || ch === '\"') {\n      state.tokenizer = buildStringTokenizer(stream.next());\n      return \"string\";\n    } else {\n      state.tokenizer = buildStringTokenizer(\")\", false);\n      return \"string\";\n    }\n  }\n  function comment(indentation, multiLine) {\n    return function(stream, state) {\n      if (stream.sol() && stream.indentation() <= indentation) {\n        state.tokenizer = tokenBase;\n        return tokenBase(stream, state);\n      }\n\n      if (multiLine && stream.skipTo(\"*/\")) {\n        stream.next();\n        stream.next();\n        state.tokenizer = tokenBase;\n      } else {\n        stream.skipToEnd();\n      }\n\n      return \"comment\";\n    };\n  }\n\n  function buildStringTokenizer(quote, greedy) {\n    if (greedy == null) { greedy = true; }\n\n    function stringTokenizer(stream, state) {\n      var nextChar = stream.next();\n      var peekChar = stream.peek();\n      var previousChar = stream.string.charAt(stream.pos-2);\n\n      var endingString = ((nextChar !== \"\\\\\" && peekChar === quote) || (nextChar === quote && previousChar !== \"\\\\\"));\n\n      if (endingString) {\n        if (nextChar !== quote && greedy) { stream.next(); }\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        state.tokenizer = tokenBase;\n        return \"string\";\n      } else if (nextChar === \"#\" && peekChar === \"{\") {\n        state.tokenizer = buildInterpolationTokenizer(stringTokenizer);\n        stream.next();\n        return \"operator\";\n      } else {\n        return \"string\";\n      }\n    }\n\n    return stringTokenizer;\n  }\n\n  function buildInterpolationTokenizer(currentTokenizer) {\n    return function(stream, state) {\n      if (stream.peek() === \"}\") {\n        stream.next();\n        state.tokenizer = currentTokenizer;\n        return \"operator\";\n      } else {\n        return tokenBase(stream, state);\n      }\n    };\n  }\n\n  function indent(state) {\n    if (state.indentCount == 0) {\n      state.indentCount++;\n      var lastScopeOffset = state.scopes[0].offset;\n      var currentOffset = lastScopeOffset + config.indentUnit;\n      state.scopes.unshift({ offset:currentOffset });\n    }\n  }\n\n  function dedent(state) {\n    if (state.scopes.length == 1) return;\n\n    state.scopes.shift();\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.peek();\n\n    // Comment\n    if (stream.match(\"/*\")) {\n      state.tokenizer = comment(stream.indentation(), true);\n      return state.tokenizer(stream, state);\n    }\n    if (stream.match(\"//\")) {\n      state.tokenizer = comment(stream.indentation(), false);\n      return state.tokenizer(stream, state);\n    }\n\n    // Interpolation\n    if (stream.match(\"#{\")) {\n      state.tokenizer = buildInterpolationTokenizer(tokenBase);\n      return \"operator\";\n    }\n\n    // Strings\n    if (ch === '\"' || ch === \"'\") {\n      stream.next();\n      state.tokenizer = buildStringTokenizer(ch);\n      return \"string\";\n    }\n\n    if(!state.cursorHalf){// state.cursorHalf === 0\n    // first half i.e. before : for key-value pairs\n    // including selectors\n\n      if (ch === \"-\") {\n        if (stream.match(/^-\\w+-/)) {\n          return \"meta\";\n        }\n      }\n\n      if (ch === \".\") {\n        stream.next();\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"qualifier\";\n        } else if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if (ch === \"#\") {\n        stream.next();\n        // ID selectors\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"builtin\";\n        }\n        if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"variable-2\";\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/))\n        return \"number\";\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/))\n        return \"unit\";\n\n      if (stream.match(keywordsRegexp))\n        return \"keyword\";\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        return \"atom\";\n      }\n\n      if (ch === \"=\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^=[\\w-]+/)) {\n          indent(state);\n          return \"meta\";\n        }\n      }\n\n      if (ch === \"+\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^\\+[\\w-]+/)){\n          return \"variable-3\";\n        }\n      }\n\n      if(ch === \"@\"){\n        if(stream.match('@extend')){\n          if(!stream.match(/\\s*[\\w]/))\n            dedent(state);\n        }\n      }\n\n\n      // Indent Directives\n      if (stream.match(/^@(else if|if|media|else|for|each|while|mixin|function)/)) {\n        indent(state);\n        return \"def\";\n      }\n\n      // Other Directives\n      if (ch === \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"def\";\n      }\n\n      if (stream.eatWhile(/[\\w-]/)){\n        if(stream.match(/ *: *[\\w-\\+\\$#!\\(\"']/,false)){\n          word = stream.current().toLowerCase();\n          var prop = state.prevProp + \"-\" + word;\n          if (propertyKeywords.hasOwnProperty(prop)) {\n            return \"property\";\n          } else if (propertyKeywords.hasOwnProperty(word)) {\n            state.prevProp = word;\n            return \"property\";\n          } else if (fontProperties.hasOwnProperty(word)) {\n            return \"property\";\n          }\n          return \"tag\";\n        }\n        else if(stream.match(/ *:/,false)){\n          indent(state);\n          state.cursorHalf = 1;\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        }\n        else if(stream.match(/ *,/,false)){\n          return \"tag\";\n        }\n        else{\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if(ch === \":\"){\n        if (stream.match(pseudoElementsRegexp)){ // could be a pseudo-element\n          return \"variable-3\";\n        }\n        stream.next();\n        state.cursorHalf=1;\n        return \"operator\";\n      }\n\n    } // cursorHalf===0 ends here\n    else{\n\n      if (ch === \"#\") {\n        stream.next();\n        // Hex numbers\n        if (stream.match(/[0-9a-fA-F]{6}|[0-9a-fA-F]{3}/)){\n          if (isEndLine(stream)) {\n            state.cursorHalf = 0;\n          }\n          return \"number\";\n        }\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"number\";\n      }\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"unit\";\n      }\n\n      if (stream.match(keywordsRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"keyword\";\n      }\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"atom\";\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"variable-2\";\n      }\n\n      // bang character for !important, !default, etc.\n      if (ch === \"!\") {\n        stream.next();\n        state.cursorHalf = 0;\n        return stream.match(/^[\\w]+/) ? \"keyword\": \"operator\";\n      }\n\n      if (stream.match(opRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"operator\";\n      }\n\n      // attributes\n      if (stream.eatWhile(/[\\w-]/)) {\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        word = stream.current().toLowerCase();\n        if (valueKeywords.hasOwnProperty(word)) {\n          return \"atom\";\n        } else if (colorKeywords.hasOwnProperty(word)) {\n          return \"keyword\";\n        } else if (propertyKeywords.hasOwnProperty(word)) {\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        } else {\n          return \"tag\";\n        }\n      }\n\n      //stream.eatSpace();\n      if (isEndLine(stream)) {\n        state.cursorHalf = 0;\n        return null;\n      }\n\n    } // else ends here\n\n    if (stream.match(opRegexp))\n      return \"operator\";\n\n    // If we haven't returned by now, we move 1 character\n    // and return an error\n    stream.next();\n    return null;\n  }\n\n  function tokenLexer(stream, state) {\n    if (stream.sol()) state.indentCount = 0;\n    var style = state.tokenizer(stream, state);\n    var current = stream.current();\n\n    if (current === \"@return\" || current === \"}\"){\n      dedent(state);\n    }\n\n    if (style !== null) {\n      var startOfToken = stream.pos - current.length;\n\n      var withCurrentIndent = startOfToken + (config.indentUnit * state.indentCount);\n\n      var newScopes = [];\n\n      for (var i = 0; i < state.scopes.length; i++) {\n        var scope = state.scopes[i];\n\n        if (scope.offset <= withCurrentIndent)\n          newScopes.push(scope);\n      }\n\n      state.scopes = newScopes;\n    }\n\n\n    return style;\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenizer: tokenBase,\n        scopes: [{offset: 0, type: \"sass\"}],\n        indentCount: 0,\n        cursorHalf: 0,  // cursor half tells us if cursor lies after (1)\n                        // or before (0) colon (well... more or less)\n        definedVars: [],\n        definedMixins: []\n      };\n    },\n    token: function(stream, state) {\n      var style = tokenLexer(stream, state);\n\n      state.lastToken = { style: style, content: stream.current() };\n\n      return style;\n    },\n\n    indent: function(state) {\n      return state.scopes[0].offset;\n    },\n\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"indent\"\n  };\n}, \"css\");\n\nCodeMirror.defineMIME(\"text/x-sass\", \"sass\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  \"use strict\";\n  if (typeof exports === \"object\" && typeof module === \"object\") {// CommonJS\n    mod(require(\"../../lib/codemirror\"),\n        require(\"../../addon/mode/overlay\"),\n        require(\"../xml/xml\"),\n        require(\"../javascript/javascript\"),\n        require(\"../coffeescript/coffeescript\"),\n        require(\"../css/css\"),\n        require(\"../sass/sass\"),\n        require(\"../stylus/stylus\"),\n        require(\"../pug/pug\"),\n        require(\"../handlebars/handlebars\"));\n  } else if (typeof define === \"function\" && define.amd) { // AMD\n    define([\"../../lib/codemirror\",\n            \"../../addon/mode/overlay\",\n            \"../xml/xml\",\n            \"../javascript/javascript\",\n            \"../coffeescript/coffeescript\",\n            \"../css/css\",\n            \"../sass/sass\",\n            \"../stylus/stylus\",\n            \"../pug/pug\",\n            \"../handlebars/handlebars\"], mod);\n  } else { // Plain browser env\n    mod(CodeMirror);\n  }\n})(function (CodeMirror) {\n  var tagLanguages = {\n    script: [\n      [\"lang\", /coffee(script)?/, \"coffeescript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?coffee(?:script)?$/, \"coffeescript\"],\n      [\"lang\", /^babel$/, \"javascript\"],\n      [\"type\", /^text\\/babel$/, \"javascript\"],\n      [\"type\", /^text\\/ecmascript-\\d+$/, \"javascript\"]\n    ],\n    style: [\n      [\"lang\", /^stylus$/i, \"stylus\"],\n      [\"lang\", /^sass$/i, \"sass\"],\n      [\"lang\", /^less$/i, \"text/x-less\"],\n      [\"lang\", /^scss$/i, \"text/x-scss\"],\n      [\"type\", /^(text\\/)?(x-)?styl(us)?$/i, \"stylus\"],\n      [\"type\", /^text\\/sass/i, \"sass\"],\n      [\"type\", /^(text\\/)?(x-)?scss$/i, \"text/x-scss\"],\n      [\"type\", /^(text\\/)?(x-)?less$/i, \"text/x-less\"]\n    ],\n    template: [\n      [\"lang\", /^vue-template$/i, \"vue\"],\n      [\"lang\", /^pug$/i, \"pug\"],\n      [\"lang\", /^handlebars$/i, \"handlebars\"],\n      [\"type\", /^(text\\/)?(x-)?pug$/i, \"pug\"],\n      [\"type\", /^text\\/x-handlebars-template$/i, \"handlebars\"],\n      [null, null, \"vue-template\"]\n    ]\n  };\n\n  CodeMirror.defineMode(\"vue-template\", function (config, parserConfig) {\n    var mustacheOverlay = {\n      token: function (stream) {\n        if (stream.match(/^\\{\\{.*?\\}\\}/)) return \"meta mustache\";\n        while (stream.next() && !stream.match(\"{{\", false)) {}\n        return null;\n      }\n    };\n    return CodeMirror.overlayMode(CodeMirror.getMode(config, parserConfig.backdrop || \"text/html\"), mustacheOverlay);\n  });\n\n  CodeMirror.defineMode(\"vue\", function (config) {\n    return CodeMirror.getMode(config, {name: \"htmlmixed\", tags: tagLanguages});\n  }, \"htmlmixed\", \"xml\", \"javascript\", \"coffeescript\", \"css\", \"sass\", \"stylus\", \"pug\", \"handlebars\");\n\n  CodeMirror.defineMIME(\"script/x-vue\", \"vue\");\n  CodeMirror.defineMIME(\"text/x-vue\", \"vue\");\n});\n"],"sourceRoot":""}