{"version":3,"sources":["webpack://plantilla-visor-react/./node_modules/codemirror/mode/htmlmixed/htmlmixed.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/ruby/ruby.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/slim/slim.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","wordObj","words","o","e","keywordList","keywords","indentWords","dedentWords","opening","closing","curPunc","chain","newtok","tokenize","push","tokenBase","sol","readBlockComment","eatSpace","m","phrase","mayIndent","ch","next","readQuoted","start","pos","depth","found","escaped","indexOf","regexpAhead","embed","eat","delim","propertyIsEnumerable","skipToEnd","pop","eatWhile","varList","lastTok","more","tokenBaseUntilBrace","peek","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","indented","indentUnit","continuedLine","indentation","kwtype","thisTok","word","column","firstChar","charAt","ct","closed","electricInput","lineComment","fold","registerHelper","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","continueLine","stack","parent","finishContinue","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","offset","idx","restore","backup","startHtmlLine","lastTokenize","htmlLine","startHtmlMode","comment","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","query","mimeModes","factory","createMode","doctypeLine","_state","startLine","commentMode","lineContinuable","startSubMode","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","startAttributeWrapperMode","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","blankLine","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","editorConf","config_","setStyle","defaults","prop","inText","parser","inBlock","doctype","closure","baseState","tagStart","isInAttribute","stringStartCol","terminator","Context","this","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","alignCDATA","tagAfter","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","reverse"],"mappings":"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","file":"2486.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"sourceRoot":""}