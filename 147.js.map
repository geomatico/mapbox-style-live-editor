{"version":3,"sources":["webpack://plantilla-visor-react/./node_modules/codemirror/mode/haml/haml.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/htmlmixed/htmlmixed.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/ruby/ruby.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defineMode","config","htmlMode","getMode","name","rubyMode","rubyInQuote","endQuote","stream","state","peek","rubyState","tokenize","length","next","html","ruby","match","skipToEnd","token","ch","previousToken","style","indented","startOfLine","htmlState","startState","copyState","sol","indentation","eatSpace","eol","backUp","defineMIME","mod","defaultTags","script","attrRegexpCache","getAttrValue","text","attr","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","unshift","parserConfig","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","mode","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","maybeBackup","indent","local","textAfter","line","Pass","innerMode","wordObj","words","o","e","keywordList","keywords","indentWords","dedentWords","opening","closing","curPunc","chain","newtok","push","tokenBase","readBlockComment","m","phrase","mayIndent","readQuoted","start","pos","depth","found","escaped","indexOf","regexpAhead","embed","eat","delim","propertyIsEnumerable","pop","eatWhile","varList","lastTok","more","tokenBaseUntilBrace","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","indentUnit","continuedLine","kwtype","thisTok","word","column","firstChar","charAt","ct","closed","electricInput","lineComment","fold","registerHelper","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","editorConf","config_","setStyle","defaults","prop","inText","parser","inBlock","doctype","closure","baseState","tagStart","isInAttribute","stringStartCol","terminator","Context","this","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","alignCDATA","tagAfter","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","reverse","mimeModes"],"mappings":"8HAUG,SAASA,GACZ,aAGEA,EAAWC,WAAW,QAAQ,SAASC,GACrC,IAAIC,EAAWH,EAAWI,QAAQF,EAAQ,CAACG,KAAM,cAC7CC,EAAWN,EAAWI,QAAQF,EAAQ,QAE1C,SAASK,EAAYC,GACnB,OAAO,SAASC,EAAQC,GAEtB,OADSD,EAAOE,QACNH,GAA+C,GAAnCE,EAAME,UAAUC,SAASC,QAE7CL,EAAOM,OACPL,EAAMG,SAAWG,EACV,qBAEAC,EAAKR,EAAQC,IAK1B,SAASO,EAAKR,EAAQC,GACpB,OAAID,EAAOS,MAAM,OACfT,EAAOU,YACA,WAEFb,EAASc,MAAMX,EAAQC,EAAME,WAGtC,SAASI,EAAKP,EAAQC,GACpB,IAAIW,EAAKZ,EAAOE,OAIhB,GAAiC,WAA7BD,EAAMY,cAAcC,OAClBb,EAAMc,SAAWd,EAAMY,cAAcE,SAEvC,OADAf,EAAOU,YACA,cAIX,GAAIT,EAAMe,YAAa,CACrB,GAAU,KAANJ,GAAaZ,EAAOS,MAAM,MAE5B,OADAT,EAAOU,YACA,MACF,GAAIV,EAAOS,MAAM,gBAEtB,OADAR,EAAMG,SAAWI,EACV,UACF,GAAIR,EAAOS,MAAM,YACtB,MAAO,UACF,GAAU,KAANG,EAET,OADAZ,EAAOU,YACA,UAIX,IAAIT,EAAMe,aAA4C,WAA7Bf,EAAMY,cAAcC,SAChC,KAANF,GAAmB,KAANA,GAEhB,OADAZ,EAAOS,MAAM,aACN,gBAKX,GAAIR,EAAMe,cAAgBhB,EAAOS,MAAM,UAAO,KAAiB,KAANG,GAAmB,KAANA,GAEpE,OADAX,EAAMG,SAAWI,EACVP,EAAMG,SAASJ,EAAQC,GAGhC,GAAiC,WAA7BA,EAAMY,cAAcC,OACS,qBAA7Bb,EAAMY,cAAcC,OACS,iBAA7Bb,EAAMY,cAAcC,MAA0B,CAChD,GAAU,KAANF,EAEF,OADAX,EAAMG,SAAWN,EAAY,KACtBG,EAAMG,SAASJ,EAAQC,GACzB,GAAU,KAANW,IACJZ,EAAOS,MAAM,UAEhB,OADAR,EAAMG,SAAWN,EAAY,KACtBG,EAAMG,SAASJ,EAAQC,GAKpC,OAAOP,EAASiB,MAAMX,EAAQC,EAAMgB,WAGtC,MAAO,CAELC,WAAY,WAGV,MAAO,CACLD,UAHc1B,EAAW2B,WAAWxB,GAIpCS,UAHcZ,EAAW2B,WAAWrB,GAIpCkB,SAAU,EACVF,cAAe,CAAEC,MAAO,KAAMC,SAAU,GACxCX,SAAUG,IAIdY,UAAW,SAASlB,GAClB,MAAO,CACLgB,UAAY1B,EAAW4B,UAAUzB,EAAUO,EAAMgB,WACjDd,UAAWZ,EAAW4B,UAAUtB,EAAUI,EAAME,WAChDY,SAAUd,EAAMc,SAChBF,cAAeZ,EAAMY,cACrBT,SAAUH,EAAMG,WAIpBO,MAAO,SAASX,EAAQC,GAKtB,GAJID,EAAOoB,QACTnB,EAAMc,SAAWf,EAAOqB,cACxBpB,EAAMe,aAAc,GAElBhB,EAAOsB,WAAY,OAAO,KAC9B,IAAIR,EAAQb,EAAMG,SAASJ,EAAQC,GASnC,GARAA,EAAMe,aAAc,EAGhBF,GAAkB,eAATA,IACXb,EAAMY,cAAgB,CAAEC,MAAOA,EAAOC,SAAUd,EAAMc,WAIpDf,EAAOuB,OAAStB,EAAMG,UAAYI,EAAM,CAC1CR,EAAOwB,OAAO,GACd,IAAIZ,EAAKZ,EAAOE,OAChBF,EAAOM,OACHM,GAAY,KAANA,IACRX,EAAMG,SAAWG,GAarB,MATa,WAATO,EACFA,EAAQ,MACU,eAATA,EACTA,EAAQ,UACU,iBAATA,EACTA,EAAQ,YACU,qBAATA,IACTA,EAAQ,MAEHA,MAGV,YAAa,QAEhBvB,EAAWkC,WAAW,cAAe,QA1JnCC,CAAI,EAAQ,MAAyB,EAAQ,MAA2B,EAAQ,O,gBCKjF,SAASnC,GACV,aAEA,IAAIoC,EAAc,CAChBC,OAAQ,CACN,CAAC,OAAQ,sBAAuB,cAChC,CAAC,OAAQ,kEAAmE,cAC5E,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,eAEfd,MAAQ,CACN,CAAC,OAAQ,SAAU,OACnB,CAAC,OAAQ,oCAAqC,OAC9C,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,SAejB,IAAIe,EAAkB,GAOtB,SAASC,EAAaC,EAAMC,GAC1B,IAAIvB,EAAQsB,EAAKtB,MAPnB,SAAuBuB,GAErB,OADaH,EAAgBG,KAEtBH,EAAgBG,GAAQ,IAAIC,OAAO,OAASD,EAAO,yCAInCE,CAAcF,IACrC,OAAOvB,EAAQ,gBAAgB0B,KAAK1B,EAAM,IAAI,GAAK,GAGrD,SAAS2B,EAAaC,EAASC,GAC7B,OAAO,IAAIL,QAAQK,EAAW,IAAM,IAAM,OAAWD,EAAU,MAAQ,KAGzE,SAASE,EAAQC,EAAMC,GACrB,IAAK,IAAIC,KAAOF,EAGd,IAFA,IAAIG,EAAOF,EAAGC,KAASD,EAAGC,GAAO,IAC7BE,EAASJ,EAAKE,GACTG,EAAID,EAAOvC,OAAS,EAAGwC,GAAK,EAAGA,IACtCF,EAAKG,QAAQF,EAAOC,IAW1BtD,EAAWC,WAAW,aAAa,SAAUC,EAAQsD,GACnD,IAAIrD,EAAWH,EAAWI,QAAQF,EAAQ,CACxCG,KAAM,MACNF,UAAU,EACVsD,yBAA0BD,EAAaC,yBACvCC,0BAA2BF,EAAaE,0BACxCC,oBAAqBH,EAAaG,sBAGhCC,EAAO,GACPC,EAAaL,GAAgBA,EAAaI,KAAME,EAAeN,GAAgBA,EAAaO,YAGhG,GAFAf,EAAQZ,EAAawB,GACjBC,GAAYb,EAAQa,EAAYD,GAChCE,EAAc,IAAK,IAAIR,EAAIQ,EAAahD,OAAS,EAAGwC,GAAK,EAAGA,IAC9DM,EAAKvB,OAAOkB,QAAQ,CAAC,OAAQO,EAAaR,GAAGU,QAASF,EAAaR,GAAGW,OAExE,SAASjD,EAAKP,EAAQC,GACpB,IAAkFoC,EAA9EvB,EAAQpB,EAASiB,MAAMX,EAAQC,EAAMgB,WAAYyB,EAAM,UAAUe,KAAK3C,GAC1E,GAAI4B,IAAQ,WAAWe,KAAKzD,EAAO0D,aAC9BrB,EAAUpC,EAAMgB,UAAUoB,SAAWpC,EAAMgB,UAAUoB,QAAQsB,gBAC9DR,EAAKS,eAAevB,GACtBpC,EAAM4D,MAAQxB,EAAU,SACnB,GAAIpC,EAAM4D,OAASnB,GAAO,KAAKe,KAAKzD,EAAO0D,WAAY,CAC5D,IAAIG,EAAQ,gBAAgB1B,KAAKlC,EAAM4D,OACvC5D,EAAM4D,MAAQ,KACd,IAAIC,EAA+B,KAApB9D,EAAO0D,WAhC5B,SAA0BK,EAASC,GACjC,IAAK,IAAInB,EAAI,EAAGA,EAAIkB,EAAQ1D,OAAQwC,IAAK,CACvC,IAAIoB,EAAOF,EAAQlB,GACnB,IAAKoB,EAAK,IAAMA,EAAK,GAAGR,KAAK3B,EAAakC,EAASC,EAAK,KAAM,OAAOA,EAAK,IA6B9BC,CAAiBf,EAAKU,EAAM,IAAKA,EAAM,IAC7EL,EAAOjE,EAAWI,QAAQF,EAAQqE,GAClCK,EAAU/B,EAAayB,EAAM,IAAI,GAAOO,EAAShC,EAAayB,EAAM,IAAI,GAC5E5D,EAAMU,MAAQ,SAAUX,EAAQC,GAC9B,OAAID,EAAOS,MAAM0D,GAAS,IACxBlE,EAAMU,MAAQJ,EACdN,EAAMoE,WAAapE,EAAMqE,UAAY,KAC9B,MA3EjB,SAAqBtE,EAAQuE,EAAKzD,GAChC,IAAI0D,EAAMxE,EAAO0D,UAAWe,EAAQD,EAAIE,OAAOH,GAO/C,OANIE,GAAS,EACXzE,EAAOwB,OAAOgD,EAAInE,OAASoE,GAClBD,EAAI/D,MAAM,WACnBT,EAAOwB,OAAOgD,EAAInE,QACbL,EAAOS,MAAM8D,GAAK,IAAQvE,EAAOS,MAAM+D,IAEvC1D,EAqEM6D,CAAY3E,EAAQoE,EAAQnE,EAAMqE,UAAU3D,MAAMX,EAAQC,EAAMoE,cAEzEpE,EAAMqE,UAAYd,EAClBvD,EAAMoE,WAAa9E,EAAW2B,WAAWsC,EAAM9D,EAASkF,OAAO3E,EAAMgB,UAAW,GAAI,UAC3EhB,EAAM4D,QACf5D,EAAM4D,OAAS7D,EAAO0D,UAClB1D,EAAOuB,QAAOtB,EAAM4D,OAAS,MAEnC,OAAO/C,EAGT,MAAO,CACLI,WAAY,WAEV,MAAO,CAACP,MAAOJ,EAAMsD,MAAO,KAAMS,UAAW,KAAMD,WAAY,KAAMpD,UADzD1B,EAAW2B,WAAWxB,KAIpCyB,UAAW,SAAUlB,GACnB,IAAI4E,EAIJ,OAHI5E,EAAMoE,aACRQ,EAAQtF,EAAW4B,UAAUlB,EAAMqE,UAAWrE,EAAMoE,aAE/C,CAAC1D,MAAOV,EAAMU,MAAOkD,MAAO5D,EAAM4D,MACjCS,UAAWrE,EAAMqE,UAAWD,WAAYQ,EACxC5D,UAAW1B,EAAW4B,UAAUzB,EAAUO,EAAMgB,aAG1DN,MAAO,SAAUX,EAAQC,GACvB,OAAOA,EAAMU,MAAMX,EAAQC,IAG7B2E,OAAQ,SAAU3E,EAAO6E,EAAWC,GAClC,OAAK9E,EAAMqE,WAAa,UAAUb,KAAKqB,GAC9BpF,EAASkF,OAAO3E,EAAMgB,UAAW6D,EAAWC,GAC5C9E,EAAMqE,UAAUM,OAChB3E,EAAMqE,UAAUM,OAAO3E,EAAMoE,WAAYS,EAAWC,GAEpDxF,EAAWyF,MAGtBC,UAAW,SAAUhF,GACnB,MAAO,CAACA,MAAOA,EAAMoE,YAAcpE,EAAMgB,UAAWuC,KAAMvD,EAAMqE,WAAa5E,OAGhF,MAAO,aAAc,OAExBH,EAAWkC,WAAW,YAAa,aAlJjCC,CAAI,EAAQ,MAAyB,EAAQ,MAAe,EAAQ,MAA6B,EAAQ,Q,eCK1G,SAASnC,GACZ,aAEA,SAAS2F,EAAQC,GAEf,IADA,IAAIC,EAAI,GACCvC,EAAI,EAAGwC,EAAIF,EAAM9E,OAAQwC,EAAIwC,IAAKxC,EAAGuC,EAAED,EAAMtC,KAAM,EAC5D,OAAOuC,EAGT,IAAIE,EAAc,CAChB,QAAS,MAAO,QAAS,QAAS,QAAS,OAAQ,QAAS,MAAO,WAAY,KAAM,OACrF,QAAS,MAAO,MAAO,SAAU,QAAS,MAAO,KAAM,KAAM,SAAU,OAAQ,MAAO,KACtF,OAAQ,SAAU,QAAS,SAAU,OAAQ,QAAS,OAAQ,OAAQ,QAAS,SAC/E,QAAS,OAAQ,QAAS,QAAS,MAAO,QAAS,QAAS,QAAS,OAAQ,OAAQ,SACrF,SAAU,SAAU,OAAQ,SAAU,YAAa,UAAW,UAAW,OACzE,mBAAoB,SAAU,WAAY,UAAW,WAAY,WAAY,WAC5EC,EAAWL,EAAQI,GAElBE,EAAcN,EAAQ,CAAC,MAAO,QAAS,OAAQ,MAAO,QAAS,QAAS,SAAU,OAC3D,QAAS,OAAQ,OAAQ,UAChDO,EAAcP,EAAQ,CAAC,MAAO,UAC9BQ,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACpCC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAExCpG,EAAWC,WAAW,QAAQ,SAASC,GACrC,IAAImG,EAEJ,SAASC,EAAMC,EAAQ9F,EAAQC,GAE7B,OADAA,EAAMG,SAAS2F,KAAKD,GACbA,EAAO9F,EAAQC,GAGxB,SAAS+F,EAAUhG,EAAQC,GACzB,GAAID,EAAOoB,OAASpB,EAAOS,MAAM,WAAaT,EAAOuB,MAEnD,OADAtB,EAAMG,SAAS2F,KAAKE,GACb,UAET,GAAIjG,EAAOsB,WAAY,OAAO,KAC9B,IAAwB4E,EA8KLC,EAAQC,EA9KvBxF,EAAKZ,EAAOM,OAChB,GAAU,KAANM,GAAmB,KAANA,GAAmB,KAANA,EAC5B,OAAOiF,EAAMQ,EAAWzF,EAAI,SAAgB,KAANA,GAAmB,KAANA,GAAYZ,EAAQC,GAClE,GAAU,KAANW,EACT,OA0FJ,SAAqBZ,GAEnB,IADA,IAAmCM,EAA/BgG,EAAQtG,EAAOuG,IAAKC,EAAQ,EAASC,GAAQ,EAAOC,GAAU,EACjC,OAAzBpG,EAAON,EAAOM,SACpB,GAAKoG,EAYHA,GAAU,MAZE,CACZ,GAAI,MAAMC,QAAQrG,IAAS,EACzBkG,SACK,GAAI,MAAMG,QAAQrG,IAAS,GAEhC,KADAkG,EACY,EAAG,WACV,GAAY,KAARlG,GAAwB,GAATkG,EAAY,CACpCC,GAAQ,EACR,MAEFC,EAAkB,MAARpG,EAMd,OADAN,EAAOwB,OAAOxB,EAAOuG,IAAMD,GACpBG,EA7GDG,CAAY5G,GACP6F,EAAMQ,EAAWzF,EAAI,YAAY,GAAOZ,EAAQC,GAEhD,WACJ,GAAU,KAANW,EAAW,CACpB,IAAIE,EAAQ,SAAU+F,GAAQ,EAC1B7G,EAAO8G,IAAI,KAAMhG,EAAQ,OACpBd,EAAO8G,IAAI,QAAShG,EAAQ,SAC5Bd,EAAO8G,IAAI,OAAQhG,EAAQ,WAC3Bd,EAAO8G,IAAI,WAAYhG,EAAQ,SAAU+F,GAAQ,GAC1D,IAAIE,EAAQ/G,EAAO8G,IAAI,YACvB,OAAKC,GACDrB,EAAQsB,qBAAqBD,KAAQA,EAAQrB,EAAQqB,IAClDlB,EAAMQ,EAAWU,EAAOjG,EAAO+F,GAAO,GAAO7G,EAAQC,IAFzC,WAGd,GAAU,KAANW,EAET,OADAZ,EAAOU,YACA,UACF,GAAU,KAANE,IAAcsF,EAAIlG,EAAOS,MAAM,qDACxC,OAAOoF,GAwJUM,EAxJQD,EAAE,GAwJFE,EAxJMF,EAAE,GAyJ5B,SAASlG,EAAQC,GAItB,OAHImG,GAAWpG,EAAOsB,WAClBtB,EAAOS,MAAM0F,GAASlG,EAAMG,SAAS6G,MACpCjH,EAAOU,YACL,WA7J+BV,EAAQC,GACzC,GAAU,KAANW,EAIT,OAHIZ,EAAO8G,IAAI,KAAM9G,EAAOkH,SAAS,cAC5BlH,EAAO8G,IAAI,KAAM9G,EAAOkH,SAAS,QACrClH,EAAOkH,SAAS,SACd,SACF,GAAI,KAAKzD,KAAK7C,GAEnB,OADAZ,EAAOS,MAAM,6CACN,SACF,GAAU,KAANG,EAAW,CACpB,KAAOZ,EAAOS,MAAM,cAGpB,OAFIT,EAAO8G,IAAI,MAAO9G,EAAOkH,SAAS,MACjClH,EAAOM,OACL,SACF,GAAU,KAANM,EACT,OAAIZ,EAAO8G,IAAI,KAAajB,EAAMQ,EAAW,IAAK,QAAQ,GAAQrG,EAAQC,GACtED,EAAO8G,IAAI,KAAajB,EAAMQ,EAAW,IAAK,QAAQ,GAAOrG,EAAQC,GAGrED,EAAO8G,IAAI,WACb9G,EAAO8G,IAAI,UACJ,QAIL9G,EAAO8G,IAAI,sBACN,OAIL9G,EAAO8G,IAAI,2BACb9G,EAAOkH,SAAS,oBAEhBlH,EAAO8G,IAAI,YACJ,QAEF,WACF,GAAU,KAANlG,GAAaZ,EAAOS,MAAM,2BAGnC,OAFAT,EAAO8G,IAAI,KACX9G,EAAOkH,SAAS,mBACT,aACF,GAAU,KAANtG,EAQT,OAPIZ,EAAO8G,IAAI,aACb9G,EAAOkH,SAAS,QACPlH,EAAO8G,IAAI,MACpB9G,EAAO8G,IAAI,MAEX9G,EAAOM,OAEF,aACF,GAAI,uBAAuBmD,KAAK7C,GAGrC,OAFAZ,EAAOkH,SAAS,mBAChBlH,EAAO8G,IAAI,UACP9G,EAAO8G,IAAI,KAAa,OACrB,QACF,GAAU,KAANlG,IAAcX,EAAMkH,SAA4B,KAAjBlH,EAAMmH,SAAmC,MAAjBnH,EAAMmH,QAGjE,IAAI,kBAAkB3D,KAAK7C,GAEhC,OADAgF,EAAUhF,EACH,KACF,GAAU,KAANA,GAAaZ,EAAO8G,IAAI,KACjC,MAAO,QACF,GAAI,qBAAqBrD,KAAK7C,GAAK,CACxC,IAAIyG,EAAOrH,EAAOkH,SAAS,sBAE3B,MADU,KAANtG,GAAcyG,IAAMzB,EAAU,KAC3B,WAEP,OAAO,KAXP,OADAA,EAAU,IACH,KAqCX,SAAS0B,EAAoBd,GAE3B,OADKA,IAAOA,EAAQ,GACb,SAASxG,EAAQC,GACtB,GAAqB,KAAjBD,EAAOE,OAAe,CACxB,GAAa,GAATsG,EAEF,OADAvG,EAAMG,SAAS6G,MACRhH,EAAMG,SAASH,EAAMG,SAASC,OAAO,GAAGL,EAAQC,GAEvDA,EAAMG,SAASH,EAAMG,SAASC,OAAS,GAAKiH,EAAoBd,EAAQ,OAEhD,KAAjBxG,EAAOE,SAChBD,EAAMG,SAASH,EAAMG,SAASC,OAAS,GAAKiH,EAAoBd,EAAQ,IAE1E,OAAOR,EAAUhG,EAAQC,IAG7B,SAASsH,IACP,IAAIC,GAAgB,EACpB,OAAO,SAASxH,EAAQC,GACtB,OAAIuH,GACFvH,EAAMG,SAAS6G,MACRhH,EAAMG,SAASH,EAAMG,SAASC,OAAO,GAAGL,EAAQC,KAEzDuH,GAAgB,EACTxB,EAAUhG,EAAQC,KAG7B,SAASoG,EAAWoB,EAAO3G,EAAO+F,EAAOa,GACvC,OAAO,SAAS1H,EAAQC,GACtB,IAAqBW,EAAjB8F,GAAU,EAOd,IAL2B,uBAAvBzG,EAAM0H,QAAQC,OAChB3H,EAAM0H,QAAU1H,EAAM0H,QAAQE,KAC9B7H,EAAO8G,IAAI,MAGkB,OAAvBlG,EAAKZ,EAAOM,SAAiB,CACnC,GAAIM,GAAM6G,IAAUC,IAAchB,GAAU,CAC1CzG,EAAMG,SAAS6G,MACf,MAEF,GAAIJ,GAAe,KAANjG,IAAc8F,EAAS,CAClC,GAAI1G,EAAO8G,IAAI,KAAM,CACN,KAATW,IACFxH,EAAM0H,QAAU,CAACE,KAAM5H,EAAM0H,QAASC,KAAM,uBAE9C3H,EAAMG,SAAS2F,KAAKuB,KACpB,MACK,GAAI,QAAQ7D,KAAKzD,EAAOE,QAAS,CACtCD,EAAMG,SAAS2F,KAAKwB,KACpB,OAGJb,GAAWA,GAAiB,MAAN9F,EAExB,OAAOE,GAWX,SAASmF,EAAiBjG,EAAQC,GAIhC,OAHID,EAAOoB,OAASpB,EAAOS,MAAM,SAAWT,EAAOuB,OACjDtB,EAAMG,SAAS6G,MACjBjH,EAAOU,YACA,UAGT,MAAO,CACLQ,WAAY,WACV,MAAO,CAACd,SAAU,CAAC4F,GACXjF,SAAU,EACV4G,QAAS,CAACC,KAAM,MAAO7G,UAAWtB,EAAOqI,YACzCC,eAAe,EACfX,QAAS,KACTD,SAAS,IAGnBxG,MAAO,SAASX,EAAQC,GACtB2F,EAAU,KACN5F,EAAOoB,QAAOnB,EAAMc,SAAWf,EAAOqB,eAC1C,IAAoE2G,EAAhElH,EAAQb,EAAMG,SAASH,EAAMG,SAASC,OAAO,GAAGL,EAAQC,GACxDgI,EAAUrC,EACd,GAAa,SAAT9E,EAAkB,CACpB,IAAIoH,EAAOlI,EAAO0D,UAML,YALb5C,EAAyB,KAAjBb,EAAMmH,QAAiB,WAC3B7B,EAASyB,qBAAqBhH,EAAO0D,WAAa,UAClD,SAASD,KAAKyE,GAAQ,MACJ,OAAjBjI,EAAMmH,SAAqC,SAAjBnH,EAAMmH,SAAsBnH,EAAMkH,QAAW,MACxE,cAEFc,EAAUC,EACN1C,EAAYwB,qBAAqBkB,GAAOF,EAAS,SAC5CvC,EAAYuB,qBAAqBkB,GAAOF,EAAS,SACxC,MAARE,GAAwB,UAARA,GAAqBlI,EAAOmI,UAAYnI,EAAOqB,cAExD,MAAR6G,GAAgBjI,EAAM0H,QAAQ5G,SAAWd,EAAMc,WACtDiH,EAAS,UAFTA,EAAS,UAef,OAVIpC,GAAY9E,GAAkB,WAATA,KAAqBb,EAAMmH,QAAUa,GAC/C,KAAXrC,IAAgB3F,EAAMkH,SAAWlH,EAAMkH,SAE7B,UAAVa,GAAsB,WAAWvE,KAAKmC,GACxC3F,EAAM0H,QAAU,CAACE,KAAM5H,EAAM0H,QAASC,KAAMhC,GAAW9E,EAAOC,SAAUd,EAAMc,WAC5D,UAAViH,GAAsB,WAAWvE,KAAKmC,KAAa3F,EAAM0H,QAAQE,OACzE5H,EAAM0H,QAAU1H,EAAM0H,QAAQE,MAE5B7H,EAAOuB,QACTtB,EAAM8H,cAA4B,MAAXnC,GAA4B,YAAT9E,GACrCA,GAGT8D,OAAQ,SAAS3E,EAAO6E,GACtB,GAAI7E,EAAMG,SAASH,EAAMG,SAASC,OAAO,IAAM2F,EAAW,OAAOzG,EAAWyF,KAC5E,IAAIoD,EAAYtD,GAAaA,EAAUuD,OAAO,GAC1CC,EAAKrI,EAAM0H,QACXY,EAASD,EAAGV,MAAQjC,EAAQyC,IACnB,WAAXE,EAAGV,MAAqB,0CAA0CnE,KAAKqB,GACzE,OAAOwD,EAAGvH,UAAYwH,EAAS,EAAI9I,EAAOqI,aACvC7H,EAAM8H,cAAgBtI,EAAOqI,WAAa,IAG/CU,cAAe,oCACfC,YAAa,IACbC,KAAM,aAIVnJ,EAAWkC,WAAW,cAAe,QAErClC,EAAWoJ,eAAe,YAAa,OAAQrD,GAvS3C5D,CAAI,EAAQ,Q,gBCKb,SAASnC,GACZ,aAEA,IAAIqJ,EAAa,CACfC,gBAAiB,CAAC,MAAQ,EAAM,MAAQ,EAAM,IAAM,EAAM,KAAO,EAAM,SAAW,EAChE,OAAS,EAAM,OAAS,EAAM,IAAM,EAAM,KAAO,EAAM,OAAS,EAChE,QAAU,EAAM,MAAQ,EAAM,MAAQ,EAAM,OAAS,EAAM,QAAU,EACrE,OAAS,EAAM,KAAO,EAAM,UAAY,GAC1DC,iBAAkB,CAAC,IAAM,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,GAAK,EAC/D,IAAM,EAAM,IAAM,EAAM,OAAS,EAAM,IAAM,EAAM,OAAS,EAC5D,IAAM,EAAM,IAAM,GACrCC,gBAAiB,CACf,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,GACb,OAAU,CAAC,QAAU,EAAM,UAAY,GACvC,SAAY,CAAC,UAAY,GACzB,EAAK,CAAC,SAAW,EAAM,SAAW,EAAM,OAAS,EAAM,YAAc,EAAM,KAAO,EAC5E,KAAO,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,MAAQ,EACnE,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAClE,QAAU,EAAM,QAAU,EAAM,IAAM,EAAM,MAAQ,EAAM,KAAO,EAAM,IAAM,EAC7E,GAAK,EAAM,KAAO,EAAM,SAAW,EAAM,OAAS,EAAM,IAAM,GACpE,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,GACnB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,IAEfC,YAAa,CAAC,KAAO,GACrBC,eAAe,EACfC,cAAc,EACdC,UAAU,GAGRC,EAAY,CACdP,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAa,GACbC,eAAe,EACfC,cAAc,EACdhG,qBAAqB,EACrBiG,UAAU,GAGZ5J,EAAWC,WAAW,OAAO,SAAS6J,EAAYC,GAChD,IAOI1B,EAAM2B,EAPNzB,EAAauB,EAAWvB,WACxBrI,EAAS,GACT+J,EAAWF,EAAQ5J,SAAWkJ,EAAaQ,EAC/C,IAAK,IAAIK,KAAQD,EAAU/J,EAAOgK,GAAQD,EAASC,GACnD,IAAK,IAAIA,KAAQH,EAAS7J,EAAOgK,GAAQH,EAAQG,GAKjD,SAASC,EAAO1J,EAAQC,GACtB,SAAS4F,EAAM8D,GAEb,OADA1J,EAAMG,SAAWuJ,EACVA,EAAO3J,EAAQC,GAGxB,IAAIW,EAAKZ,EAAOM,OAChB,MAAU,KAANM,EACEZ,EAAO8G,IAAI,KACT9G,EAAO8G,IAAI,KACT9G,EAAOS,MAAM,UAAkBoF,EAAM+D,EAAQ,OAAQ,QAC7C,KACH5J,EAAOS,MAAM,MACfoF,EAAM+D,EAAQ,UAAW,WACvB5J,EAAOS,MAAM,WAAW,GAAM,IACvCT,EAAOkH,SAAS,aACTrB,EAAMgE,EAAQ,KAEd,KAEA7J,EAAO8G,IAAI,MACpB9G,EAAOkH,SAAS,aAChBjH,EAAMG,SAAWwJ,EAAQ,OAAQ,MAC1B,SAEPhC,EAAO5H,EAAO8G,IAAI,KAAO,WAAa,UACtC7G,EAAMG,SAAWyD,EACV,eAEM,KAANjD,GAELZ,EAAO8G,IAAI,KACT9G,EAAO8G,IAAI,KACR9G,EAAOkH,SAAS,eAAiBlH,EAAO8G,IAAI,KAE5C9G,EAAOkH,SAAS,SAAWlH,EAAO8G,IAAI,KAGxC9G,EAAOkH,SAAS,cAAgBlH,EAAO8G,IAAI,MAEtC,OAAS,SAErB9G,EAAOkH,SAAS,SACT,MAKX,SAASrD,EAAM7D,EAAQC,GACrB,IAwBmBwH,EACfqC,EAzBAlJ,EAAKZ,EAAOM,OAChB,GAAU,KAANM,GAAoB,KAANA,GAAaZ,EAAO8G,IAAI,KAGxC,OAFA7G,EAAMG,SAAWsJ,EACjB9B,EAAa,KAANhH,EAAY,SAAW,eACvB,cACF,GAAU,KAANA,EAET,OADAgH,EAAO,SACA,KACF,GAAU,KAANhH,EAAW,CACpBX,EAAMG,SAAWsJ,EACjBzJ,EAAMA,MAAQ8J,EACd9J,EAAMoC,QAAUpC,EAAM+J,SAAW,KACjC,IAAI1J,EAAOL,EAAMG,SAASJ,EAAQC,GAClC,OAAOK,EAAOA,EAAO,aAAe,YAC/B,MAAI,SAASmD,KAAK7C,IACvBX,EAAMG,UASWqH,EATY7G,GAU3BkJ,EAAU,SAAS9J,EAAQC,GAC7B,MAAQD,EAAOuB,OACb,GAAIvB,EAAOM,QAAUmH,EAAO,CAC1BxH,EAAMG,SAAWyD,EACjB,MAGJ,MAAO,WAEDoG,eAAgB,EACjBH,GAnBL7J,EAAMiK,eAAiBlK,EAAOmI,SACvBlI,EAAMG,SAASJ,EAAQC,KAE9BD,EAAOS,MAAM,4CACN,QAkBX,SAASmJ,EAAQ9I,EAAOqJ,GACtB,OAAO,SAASnK,EAAQC,GACtB,MAAQD,EAAOuB,OAAO,CACpB,GAAIvB,EAAOS,MAAM0J,GAAa,CAC5BlK,EAAMG,SAAWsJ,EACjB,MAEF1J,EAAOM,OAET,OAAOQ,GAIX,SAAS+I,EAAQrD,GACf,OAAO,SAASxG,EAAQC,GAEtB,IADA,IAAIW,EAC2B,OAAvBA,EAAKZ,EAAOM,SAAiB,CACnC,GAAU,KAANM,EAEF,OADAX,EAAMG,SAAWyJ,EAAQrD,EAAQ,GAC1BvG,EAAMG,SAASJ,EAAQC,GACzB,GAAU,KAANW,EAAW,CACpB,GAAa,GAAT4F,EAAY,CACdvG,EAAMG,SAAWsJ,EACjB,MAGA,OADAzJ,EAAMG,SAAWyJ,EAAQrD,EAAQ,GAC1BvG,EAAMG,SAASJ,EAAQC,IAIpC,MAAO,QAIX,SAASmK,EAAQnK,EAAOoC,EAASrB,GAC/BqJ,KAAKxC,KAAO5H,EAAM0H,QAClB0C,KAAKhI,QAAUA,GAAW,GAC1BgI,KAAKzF,OAAS3E,EAAMc,SACpBsJ,KAAKrJ,YAAcA,GACfvB,EAAOuJ,YAAYpF,eAAevB,IAAapC,EAAM0H,SAAW1H,EAAM0H,QAAQ2C,YAChFD,KAAKC,UAAW,GAEpB,SAASC,EAAWtK,GACdA,EAAM0H,UAAS1H,EAAM0H,QAAU1H,EAAM0H,QAAQE,MAEnD,SAAS2C,EAAgBvK,EAAOwK,GAE9B,IADA,IAAIC,IACS,CACX,IAAKzK,EAAM0H,QACT,OAGF,GADA+C,EAAgBzK,EAAM0H,QAAQtF,SACzB5C,EAAOsJ,gBAAgBnF,eAAe8G,KACtCjL,EAAOsJ,gBAAgB2B,GAAe9G,eAAe6G,GACxD,OAEFF,EAAWtK,IAIf,SAAS8J,EAAUnC,EAAM5H,EAAQC,GAC/B,MAAY,WAAR2H,GACF3H,EAAM+J,SAAWhK,EAAOmI,SACjBwC,GACU,YAAR/C,EACFgD,EAEAb,EAGX,SAASY,EAAa/C,EAAM5H,EAAQC,GAClC,MAAY,QAAR2H,GACF3H,EAAMoC,QAAUrC,EAAO0D,UACvB6F,EAAW,MACJsB,GACEpL,EAAOyD,qBAA+B,UAAR0E,GACvC2B,EAAW,cACJsB,EAAUjD,EAAM5H,EAAQC,KAE/BsJ,EAAW,QACJoB,GAGX,SAASC,EAAkBhD,EAAM5H,EAAQC,GACvC,GAAY,QAAR2H,EAAgB,CAClB,IAAIvF,EAAUrC,EAAO0D,UAIrB,OAHIzD,EAAM0H,SAAW1H,EAAM0H,QAAQtF,SAAWA,GAC1C5C,EAAOqJ,iBAAiBlF,eAAe3D,EAAM0H,QAAQtF,UACvDkI,EAAWtK,GACRA,EAAM0H,SAAW1H,EAAM0H,QAAQtF,SAAWA,IAAoC,IAAxB5C,EAAOqL,cAChEvB,EAAW,MACJwB,IAEPxB,EAAW,YACJyB,GAEJ,OAAIvL,EAAOyD,qBAA+B,UAAR0E,GACvC2B,EAAW,cACJwB,EAAWnD,EAAM5H,EAAQC,KAEhCsJ,EAAW,QACJyB,GAIX,SAASD,EAAWnD,EAAMqD,EAAShL,GACjC,MAAY,UAAR2H,GACF2B,EAAW,QACJwB,IAETR,EAAWtK,GACJ8J,GAET,SAASiB,EAAcpD,EAAM5H,EAAQC,GAEnC,OADAsJ,EAAW,QACJwB,EAAWnD,EAAM5H,EAAQC,GAGlC,SAAS4K,EAAUjD,EAAMqD,EAAShL,GAChC,GAAY,QAAR2H,EAEF,OADA2B,EAAW,YACJ2B,EACF,GAAY,UAARtD,GAA4B,gBAARA,EAAwB,CACrD,IAAIvF,EAAUpC,EAAMoC,QAAS2H,EAAW/J,EAAM+J,SAS9C,OARA/J,EAAMoC,QAAUpC,EAAM+J,SAAW,KACrB,gBAARpC,GACAnI,EAAOoJ,gBAAgBjF,eAAevB,GACxCmI,EAAgBvK,EAAOoC,IAEvBmI,EAAgBvK,EAAOoC,GACvBpC,EAAM0H,QAAU,IAAIyC,EAAQnK,EAAOoC,EAAS2H,GAAY/J,EAAMc,WAEzDgJ,EAGT,OADAR,EAAW,QACJsB,EAET,SAASK,EAAYtD,EAAM5H,EAAQC,GACjC,MAAY,UAAR2H,EAAyBuD,GACxB1L,EAAOyJ,eAAcK,EAAW,SAC9BsB,EAAUjD,EAAM5H,EAAQC,IAEjC,SAASkL,EAAevD,EAAM5H,EAAQC,GACpC,MAAY,UAAR2H,EAAyBwD,EACjB,QAARxD,GAAkBnI,EAAOwJ,eAAgBM,EAAW,SAAiBsB,IACzEtB,EAAW,QACJsB,EAAUjD,EAAM5H,EAAQC,IAEjC,SAASmL,EAAmBxD,EAAM5H,EAAQC,GACxC,MAAY,UAAR2H,EAAyBwD,EACtBP,EAAUjD,EAAM5H,EAAQC,GAGjC,OAlMAyJ,EAAO2B,UAAW,EAkMX,CACLnK,WAAY,SAASoK,GACnB,IAAIrL,EAAQ,CAACG,SAAUsJ,EACVzJ,MAAO8J,EACPhJ,SAAUuK,GAAc,EACxBjJ,QAAS,KAAM2H,SAAU,KACzBrC,QAAS,MAEtB,OADkB,MAAd2D,IAAoBrL,EAAMqL,WAAaA,GACpCrL,GAGTU,MAAO,SAASX,EAAQC,GAItB,IAHKA,EAAMoC,SAAWrC,EAAOoB,QAC3BnB,EAAMc,SAAWf,EAAOqB,eAEtBrB,EAAOsB,WAAY,OAAO,KAC9BsG,EAAO,KACP,IAAI9G,EAAQb,EAAMG,SAASJ,EAAQC,GAOnC,OANKa,GAAS8G,IAAkB,WAAT9G,IACrByI,EAAW,KACXtJ,EAAMA,MAAQA,EAAMA,MAAM2H,GAAQ9G,EAAOd,EAAQC,GAC7CsJ,IACFzI,EAAoB,SAAZyI,EAAsBzI,EAAQ,SAAWyI,IAE9CzI,GAGT8D,OAAQ,SAAS3E,EAAO6E,EAAWyG,GACjC,IAAI5D,EAAU1H,EAAM0H,QAEpB,GAAI1H,EAAMG,SAAS6J,cACjB,OAAIhK,EAAM+J,UAAY/J,EAAMc,SACnBd,EAAMiK,eAAiB,EAEvBjK,EAAMc,SAAW+G,EAE5B,GAAIH,GAAWA,EAAQ2C,SAAU,OAAO/K,EAAWyF,KACnD,GAAI/E,EAAMG,UAAYyD,GAAS5D,EAAMG,UAAYsJ,EAC/C,OAAO6B,EAAWA,EAAS9K,MAAM,UAAU,GAAGJ,OAAS,EAEzD,GAAIJ,EAAMoC,QACR,OAAyC,IAArC5C,EAAOwD,0BACFhD,EAAM+J,SAAW/J,EAAMoC,QAAQhC,OAAS,EAExCJ,EAAM+J,SAAWlC,GAAcrI,EAAOuD,0BAA4B,GAE7E,GAAIvD,EAAO+L,YAAc,cAAc/H,KAAKqB,GAAY,OAAO,EAC/D,IAAI2G,EAAW3G,GAAa,sBAAsB3C,KAAK2C,GACvD,GAAI2G,GAAYA,EAAS,GACvB,KAAO9D,GAAS,CACd,GAAIA,EAAQtF,SAAWoJ,EAAS,GAAI,CAClC9D,EAAUA,EAAQE,KAClB,MACK,IAAIpI,EAAOqJ,iBAAiBlF,eAAe+D,EAAQtF,SAGxD,MAFAsF,EAAUA,EAAQE,UAKjB,GAAI4D,EACT,KAAO9D,GAAS,CACd,IAAI+D,EAAWjM,EAAOsJ,gBAAgBpB,EAAQtF,SAC9C,IAAIqJ,IAAYA,EAAS9H,eAAe6H,EAAS,IAG/C,MAFA9D,EAAUA,EAAQE,KAKxB,KAAOF,GAAWA,EAAQE,OAASF,EAAQ3G,aACzC2G,EAAUA,EAAQE,KACpB,OAAIF,EAAgBA,EAAQ/C,OAASkD,EACzB7H,EAAMqL,YAAc,GAGlC9C,cAAe,gBACfmD,kBAAmB,UACnBC,gBAAiB,SAEjBC,cAAepM,EAAOC,SAAW,OAAS,MAC1CoM,WAAYrM,EAAOC,SAAW,OAAS,MAEvCqM,cAAe,SAAS9L,GAClBA,EAAMA,OAASkL,IACjBlL,EAAMA,MAAQ4K,IAGlBmB,cAAe,SAAS/L,GACtB,OAAOA,EAAMoC,QAAU,CAACzC,KAAMK,EAAMoC,QAASoC,MAAqB,YAAdxE,EAAM2H,MAAsB,MAGlFqE,kBAAmB,SAAShM,GAE1B,IADA,IAAI0H,EAAU,GACLuE,EAAKjM,EAAM0H,QAASuE,EAAIA,EAAKA,EAAGrE,KACvCF,EAAQ5B,KAAKmG,EAAG7J,SAClB,OAAOsF,EAAQwE,eAKrB5M,EAAWkC,WAAW,WAAY,OAClClC,EAAWkC,WAAW,kBAAmB,OACpClC,EAAW6M,UAAUxI,eAAe,cACvCrE,EAAWkC,WAAW,YAAa,CAAC7B,KAAM,MAAOF,UAAU,IArZzDgC,CAAI,EAAQ","file":"147.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  // full haml mode. This handled embedded ruby and html fragments too\n  CodeMirror.defineMode(\"haml\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n\n    function rubyInQuote(endQuote) {\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = html;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function ruby(stream, state) {\n      if (stream.match(\"-#\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function html(stream, state) {\n      var ch = stream.peek();\n\n      // handle haml declarations. All declarations that cant be handled here\n      // will be passed to html mode\n      if (state.previousToken.style == \"comment\" ) {\n        if (state.indented > state.previousToken.indented) {\n          stream.skipToEnd();\n          return \"commentLine\";\n        }\n      }\n\n      if (state.startOfLine) {\n        if (ch == \"!\" && stream.match(\"!!\")) {\n          stream.skipToEnd();\n          return \"tag\";\n        } else if (stream.match(/^%[\\w:#\\.]+=/)) {\n          state.tokenize = ruby;\n          return \"hamlTag\";\n        } else if (stream.match(/^%[\\w:]+/)) {\n          return \"hamlTag\";\n        } else if (ch == \"/\" ) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (state.startOfLine || state.previousToken.style == \"hamlTag\") {\n        if ( ch == \"#\" || ch == \".\") {\n          stream.match(/[\\w-#\\.]*/);\n          return \"hamlAttribute\";\n        }\n      }\n\n      // do not handle --> as valid ruby, make it HTML close comment instead\n      if (state.startOfLine && !stream.match(\"-->\", false) && (ch == \"=\" || ch == \"-\" )) {\n        state.tokenize = ruby;\n        return state.tokenize(stream, state);\n      }\n\n      if (state.previousToken.style == \"hamlTag\" ||\n          state.previousToken.style == \"closeAttributeTag\" ||\n          state.previousToken.style == \"hamlAttribute\") {\n        if (ch == \"(\") {\n          state.tokenize = rubyInQuote(\")\");\n          return state.tokenize(stream, state);\n        } else if (ch == \"{\") {\n          if (!stream.match(/^\\{%.*/)) {\n            state.tokenize = rubyInQuote(\"}\");\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n\n      return htmlMode.token(stream, state.htmlState);\n    }\n\n    return {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          indented: 0,\n          previousToken: { style: null, indented: 0},\n          tokenize: html\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          indented: state.indented,\n          previousToken: state.previousToken,\n          tokenize: state.tokenize\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        // dont record comment line as we only want to measure comment line with\n        // the opening comment block\n        if (style && style != \"commentLine\") {\n          state.previousToken = { style: style, indented: state.indented };\n        }\n        // if current state is ruby and the previous token is not `,` reset the\n        // tokenize to html\n        if (stream.eol() && state.tokenize == ruby) {\n          stream.backUp(1);\n          var ch = stream.peek();\n          stream.next();\n          if (ch && ch != \",\") {\n            state.tokenize = html;\n          }\n        }\n        // reprocess some of the specific style tag when finish setting previousToken\n        if (style == \"hamlTag\") {\n          style = \"tag\";\n        } else if (style == \"commentLine\") {\n          style = \"comment\";\n        } else if (style == \"hamlAttribute\") {\n          style = \"attribute\";\n        } else if (style == \"closeAttributeTag\") {\n          style = null;\n        }\n        return style;\n      }\n    };\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-haml\", \"haml\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"sourceRoot":""}