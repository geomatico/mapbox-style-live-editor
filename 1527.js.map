{"version":3,"sources":["webpack://plantilla-visor-react/./node_modules/codemirror/mode/htmlmixed/htmlmixed.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/soy/soy.js","webpack://plantilla-visor-react/./node_modules/codemirror/mode/xml/xml.js"],"names":["CodeMirror","defaultTags","script","style","attrRegexpCache","getAttrValue","text","attr","match","RegExp","getAttrRegexp","exec","getTagRegexp","tagName","anchored","addTags","from","to","tag","dest","source","i","length","unshift","defineMode","config","parserConfig","htmlMode","getMode","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","tags","configTags","configScript","scriptTypes","matches","mode","html","stream","state","token","htmlState","test","current","toLowerCase","hasOwnProperty","inTag","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","endTag","localState","localMode","pat","cur","close","search","backUp","maybeBackup","startState","indent","eol","copyState","local","textAfter","line","Pass","innerMode","defineMIME","mod","paramData","noEndTag","soyState","variableScope","reduceIndent","indentingTags","Object","keys","filter","textMode","modes","attributes","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","tokenUntil","untilRegExp","sol","eat","oldString","string","substr","pos","index","result","hideFirstChars","localStates","prepend","list","element","next","popcontext","context","scope","variables","previousContext","ref","loose","contains","Context","this","kind","expression","push","lookupVariables","quoteKind","scopes","concat","map","pop","skipToEnd","paramRe","peekChar","peek","indexOf","undefined","substring","selfClosed","prevTag","indentingTag","tagError","isBalancedForExtern","top","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","editorConf","config_","type","setStyle","defaults","prop","inText","chain","parser","tokenize","ch","inBlock","eatWhile","doctype","quote","closure","baseState","tagStart","isInAttribute","stringStartCol","column","terminator","depth","startOfLine","prev","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","configuration","helperType","skipAttribute","xmlCurrentTag","xmlCurrentContext","cx","reverse","mimeModes"],"mappings":"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","file":"1527.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@attribute\": paramData,\n    \"@attribute?\": paramData,\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"extern\": {soyState: \"param-def\"},\n    \"export\": {soyState: \"export\"},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"javaimpl\": {},\n    \"jsimpl\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"for-loop\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"for-loop\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n    \"velog\": {},\n    \"const\": { soyState: \"const-def\"},\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false, allowMissingTagName: true}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/map\\b/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/record\\b/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\*/)) {\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"type\";\n            }\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(']')) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /(from|as)/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag;\n            var tagName;\n            if (state.tag === undefined) {\n              endTag = true;\n              tagName = '';\n            } else {\n              endTag = state.tag[0] == \"/\";\n              tagName = endTag ? state.tag.substring(1) : state.tag;\n            }\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"template-call-expression\":\n            if (stream.match(/^([\\w-?]+)(?==)/)) {\n              return \"attribute\";\n            } else if (stream.eat('>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.eat('/>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            return expression(stream, state);\n          case \"literal\":\n            if (stream.match('{/literal}', false)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n          case \"export\":\n            if (match = stream.match(/\\w+/)) {\n              state.soyState.pop();\n              if (match == \"const\") {\n                state.soyState.push(\"const-def\")\n                return \"keyword\";\n              } else if (match == \"extern\") {\n                state.soyState.push(\"param-def\")\n                return \"keyword\";\n              }\n            } else {\n              stream.next();\n            }\n            return null;\n          case \"const-def\":\n            if (stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n        }\n\n        if (stream.match('{literal}')) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              var isBalancedForExtern = tagName == 'extern' && (state.context && state.context.tag == 'export');\n              if (!state.context || ((state.context.tag != tagName) && !isBalancedForExtern)) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.match(/\\bimport\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        } else if (match = stream.match('<{')) {\n          state.soyState.push(\"template-call-expression\");\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (match = stream.match('</>')) {\n          state.indent -= 1 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],"sourceRoot":""}